{"ast":null,"code":"var _jsxFileName = \"/Users/sph/Downloads/StadStrandReactFrontEnd/src/AppComponents/MapContainer.js\",\n  _s = $RefreshSig$();\n/*eslint-disable*/\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { GoogleMap, Marker, DirectionsRenderer } from \"@react-google-maps/api\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = props => {\n  _s();\n  const [directions, setDirections] = useState(null);\n  const [error, setError] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState();\n  const onMapLoad = map => {\n    var _navigator;\n    (_navigator = navigator) === null || _navigator === void 0 ? void 0 : _navigator.geolocation.getCurrentPosition(_ref => {\n      let {\n        coords: {\n          latitude: lat,\n          longitude: lng\n        }\n      } = _ref;\n      const pos = {\n        lat,\n        lng\n      };\n      setCurrentLocation(pos);\n    });\n  };\n  const calculateRoute = useCallback(async () => {\n    // eslint-disable-next-line no-undef\n    const directionsService = new google.maps.DirectionsService();\n    const result = await directionsService.route({\n      origin: currentLocation,\n      destination: {\n        lat: (currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.lat) + 0.2,\n        lng: (currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.lng) + 0.2\n      },\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.WALKING\n    });\n    setDirections(result);\n  }, []);\n  useEffect(() => {\n    if (!props.showRoute) return;\n    calculateRoute();\n  }, [props.showRoute]);\n\n  // const currentLocation = {\n  //   lat: props.lat ?? 10,\n  //   lng: props.log ?? 10,\n  // };\n\n  // const newLocation = {\n  //   lat: props.lat ?? 13,\n  //   lng: props.log ?? 13.5,\n  // };\n\n  // const locations = [\n  //     {\n  //       name: props.address,\n  //       location: {\n  //         lat: props.lat,\n  //         lng: props.log\n  //       },\n  //     },\n  //   ];\n\n  // if (true) return <DirectionsRenderer mapContainerStyle={mapStyles} zoom={10} center={currentLocation} directions={directions} />\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    onLoad: onMapLoad,\n    mapContainerStyle: mapStyles,\n    directions: directions,\n    zoom: 10,\n    center: currentLocation,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: currentLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: directions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), !props.showRoute && /*#__PURE__*/_jsxDEV(Marker, {\n        position: directions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 32\n      }, this), props.showRoute && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        directions: directions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true)\n    // locations.map(item => {\n    // return (\n    // <Marker key={item.name} position={item.location} />\n    // )\n    // })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(MapContainer, \"CQwnfBdlNfHymn5R+vCk2zmEJmg=\");\n_c = MapContainer;\nconst mapStyles = {\n  height: \"300px\",\n  width: \"100%\"\n};\nexport default MapContainer;\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","GoogleMap","Marker","DirectionsRenderer","MapContainer","props","directions","setDirections","error","setError","currentLocation","setCurrentLocation","onMapLoad","map","navigator","geolocation","getCurrentPosition","coords","latitude","lat","longitude","lng","pos","calculateRoute","directionsService","google","maps","DirectionsService","result","route","origin","destination","travelMode","TravelMode","WALKING","showRoute","mapStyles","height","width"],"sources":["/Users/sph/Downloads/StadStrandReactFrontEnd/src/AppComponents/MapContainer.js"],"sourcesContent":["/*eslint-disable*/\n\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { GoogleMap, Marker, DirectionsRenderer } from \"@react-google-maps/api\";\n\nconst MapContainer = (props) => {\n  const [directions, setDirections] = useState(null);\n  const [error, setError] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState();\n\n  const onMapLoad = (map) => {\n    navigator?.geolocation.getCurrentPosition(\n      ({ coords: { latitude: lat, longitude: lng } }) => {\n        const pos = { lat, lng };\n        setCurrentLocation(pos);\n      }\n    );\n  };\n\n  const calculateRoute = useCallback(async () => {\n    // eslint-disable-next-line no-undef\n    const directionsService = new google.maps.DirectionsService();\n    const result = await directionsService.route({\n      origin: currentLocation,\n      destination: {\n        lat: currentLocation?.lat + 0.2,\n        lng: currentLocation?.lng + 0.2,\n      },\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.WALKING,\n    });\n    setDirections(result);\n  },[]);\n\n  useEffect(() => {\n    if (!props.showRoute) return;\n    calculateRoute();\n  }, [props.showRoute]);\n\n  // const currentLocation = {\n  //   lat: props.lat ?? 10,\n  //   lng: props.log ?? 10,\n  // };\n\n  // const newLocation = {\n  //   lat: props.lat ?? 13,\n  //   lng: props.log ?? 13.5,\n  // };\n\n  // const locations = [\n  //     {\n  //       name: props.address,\n  //       location: {\n  //         lat: props.lat,\n  //         lng: props.log\n  //       },\n  //     },\n  //   ];\n\n  // if (true) return <DirectionsRenderer mapContainerStyle={mapStyles} zoom={10} center={currentLocation} directions={directions} />\n  return (\n    <GoogleMap\n      onLoad={onMapLoad}\n      mapContainerStyle={mapStyles}\n      directions={directions}\n      zoom={10}\n      center={currentLocation}\n    >\n      {\n        <>\n          <Marker position={currentLocation} />\n          <Marker position={directions} />\n          {!props.showRoute && <Marker position={directions} />}\n          {props.showRoute && <DirectionsRenderer directions={directions} />}\n          {/* <Marker position={currentLocation} /> */}\n        </>\n        // locations.map(item => {\n        // return (\n        // <Marker key={item.name} position={item.location} />\n        // )\n        // })\n      }\n    </GoogleMap>\n  );\n};\n\nconst mapStyles = {\n  height: \"300px\",\n  width: \"100%\",\n};\n\nexport default MapContainer;\n"],"mappings":";;AAAA;;AAGA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,SAASC,SAAS,EAAEC,MAAM,EAAEC,kBAAkB,QAAQ,wBAAwB;AAAC;AAAA;AAE/E,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,EAAE;EAExD,MAAMY,SAAS,GAAIC,GAAG,IAAK;IAAA;IACzB,cAAAC,SAAS,+CAAT,WAAWC,WAAW,CAACC,kBAAkB,CACvC,QAAmD;MAAA,IAAlD;QAAEC,MAAM,EAAE;UAAEC,QAAQ,EAAEC,GAAG;UAAEC,SAAS,EAAEC;QAAI;MAAE,CAAC;MAC5C,MAAMC,GAAG,GAAG;QAAEH,GAAG;QAAEE;MAAI,CAAC;MACxBV,kBAAkB,CAACW,GAAG,CAAC;IACzB,CAAC,CACF;EACH,CAAC;EAED,MAAMC,cAAc,GAAGzB,WAAW,CAAC,YAAY;IAC7C;IACA,MAAM0B,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,iBAAiB,EAAE;IAC7D,MAAMC,MAAM,GAAG,MAAMJ,iBAAiB,CAACK,KAAK,CAAC;MAC3CC,MAAM,EAAEpB,eAAe;MACvBqB,WAAW,EAAE;QACXZ,GAAG,EAAE,CAAAT,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAES,GAAG,IAAG,GAAG;QAC/BE,GAAG,EAAE,CAAAX,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEW,GAAG,IAAG;MAC9B,CAAC;MACD;MACAW,UAAU,EAAEP,MAAM,CAACC,IAAI,CAACO,UAAU,CAACC;IACrC,CAAC,CAAC;IACF3B,aAAa,CAACqB,MAAM,CAAC;EACvB,CAAC,EAAC,EAAE,CAAC;EAEL7B,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,KAAK,CAAC8B,SAAS,EAAE;IACtBZ,cAAc,EAAE;EAClB,CAAC,EAAE,CAAClB,KAAK,CAAC8B,SAAS,CAAC,CAAC;;EAErB;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACE,QAAC,SAAS;IACR,MAAM,EAAEvB,SAAU;IAClB,iBAAiB,EAAEwB,SAAU;IAC7B,UAAU,EAAE9B,UAAW;IACvB,IAAI,EAAE,EAAG;IACT,MAAM,EAAEI,eAAgB;IAAA,uBAGtB;MAAA,wBACE,QAAC,MAAM;QAAC,QAAQ,EAAEA;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAG,eACrC,QAAC,MAAM;QAAC,QAAQ,EAAEJ;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,EAC/B,CAACD,KAAK,CAAC8B,SAAS,iBAAI,QAAC,MAAM;QAAC,QAAQ,EAAE7B;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,EACpDD,KAAK,CAAC8B,SAAS,iBAAI,QAAC,kBAAkB;QAAC,UAAU,EAAE7B;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;IAGpE;IACA;IACA;IACA;IACA;EAAA;IAAA;IAAA;IAAA;EAAA,QAEQ;AAEhB,CAAC;AAAC,GA/EIF,YAAY;AAAA,KAAZA,YAAY;AAiFlB,MAAMgC,SAAS,GAAG;EAChBC,MAAM,EAAE,OAAO;EACfC,KAAK,EAAE;AACT,CAAC;AAED,eAAelC,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}