{"version":3,"file":"index.es5.js","sources":["../src/configs/Version.ts","../src/payments/Customer.ts","../src/configs/Environment.ts","../src/adapters/FetchAdapter.ts","../src/services/mappers/ResponseErrorsMapper.ts","../src/services/CreatePaymentType.ts","../src/configs/ApiUrls.ts","../src/payments/business/AbstractPayment.ts","../src/payments/business/Resources.ts","../src/payments/business/Payment.ts","../src/payments/types/AbstractPaymentType.ts","../src/payments/types/Card.ts","../src/payments/types/Eps.ts","../src/payments/types/Giropay.ts","../src/payments/types/Paypal.ts","../src/payments/types/Ideal.ts","../src/payments/types/Invoice.ts","../src/payments/types/Prepayment.ts","../src/payments/types/Przelewy24.ts","../src/payments/types/SepaDirectDebit.ts","../src/payments/types/SepaDirectDebitSecured.ts","../src/payments/types/Sofort.ts","../src/payments/types/Pis.ts","../src/payments/types/Alipay.ts","../src/payments/types/WechatPay.ts","../src/payments/types/Bancontact.ts","../src/payments/types/InstallmentSecured.ts","../src/payments/types/InvoiceSecured.ts","../src/utils/Utils.ts","../src/payments/business/Processing.ts","../src/payments/business/Cancel.ts","../src/services/FetchCancel.ts","../src/payments/business/Charge.ts","../src/services/FetchCharge.ts","../src/payments/business/Authorization.ts","../src/services/FetchAuthorization.ts","../src/services/FetchPayment.ts","../src/services/FetchPaymentType.ts","../src/services/mappers/ResponseCustomerMapper.ts","../src/services/CreateCustomer.ts","../src/services/UpdateCustomer.ts","../src/services/DeleteCustomer.ts","../src/services/FetchCustomer.ts","../src/payments/Metadata.ts","../src/services/CreateMetadata.ts","../src/services/FetchMetadata.ts","../src/payments/Basket.ts","../src/services/CreateBasket.ts","../src/services/FetchBasket.ts","../src/services/UpdateBasket.ts","../src/payments/business/Recurring.ts","../src/services/CreateRecurring.ts","../src/services/Authorization.ts","../src/services/Charge.ts","../src/services/ChargeAuthorization.ts","../src/services/CancelAuthorization.ts","../src/services/CancelCharge.ts","../src/payments/business/Shipment.ts","../src/services/Shipment.ts","../src/services/InitPaypage.ts","../src/services/mappers/ResponseLinkpayMapper.ts","../src/services/InitLinkpay.ts","../src/services/UpdateLinkpay.ts","../src/services/DeleteLinkpay.ts","../src/payments/business/Payout.ts","../src/services/Payout.ts","../src/services/FetchPayout.ts","../src/payments/types/InstallmentSecuredPlan.ts","../src/services/FetchInstallmentSecuredPlan.ts","../src/services/UpdateInstallmentSecured.ts","../src/payments/business/Webhook.ts","../src/services/RegisterWebhook.ts","../src/services/FetchWebhook.ts","../src/services/UpdateWebhook.ts","../src/services/DeleteWebhook.ts","../src/services/PaymentService.ts","../src/configs/ErrorMessage.ts","../src/Unzer.ts","../src/payments/paypage/Paypage.ts"],"sourcesContent":["export const SDK_TYPE = 'UnzerNodeJS'\nexport const SDK_VERSION = '1.0.0'","class Customer {\n  private _firstName: string\n  private _lastName: string\n  private _salutation: Salutation\n  private _customerId: string\n  private _company: string\n  private _birthDate: string\n  private _email: string\n  private _phone: string\n  private _mobile: string\n  private _billingAddress: Address\n  private _shippingAddress: Address\n  private _companyInfo: CompanyInfo\n\n  constructor(firstName: string = '', lastName: string = '') {\n    this._firstName = firstName\n    this._lastName = lastName\n  }\n\n  /**\n   * Get Request Payload\n   */\n  public getRequestPayload() {\n    return {\n      lastname: this.getLastName(),\n      firstname: this.getFirstName(),\n      salutation: this.getSalutation(),\n      birthDate: this.getBirthDate(),\n      company: this.getCompany(),\n      email: this.getEmail(),\n      phone: this.getPhone(),\n      mobile: this.getMobile(),\n      billingAddress: this.getBillingAddress(),\n      shippingAddress: this.getShippingAddress(),\n      companyInfo: this.getCompanyInfo(),\n    }\n  }\n\n  /**\n   * Set FirstName\n   *\n   * @param {string} value\n   * @returns {Customer}\n   */\n  public setFirstName(value: string): Customer {\n    this._firstName = value\n    return this\n  }\n\n  /**\n   * Get first name property\n   *\n   * @type {string}\n   */\n  public getFirstName(): string {\n    return this._firstName\n  }\n\n  /**\n   * Set LastName\n   *\n   * @param {string} value\n   * @returns {Customer}\n   */\n  public setLastName(value: string): Customer {\n    this._lastName = value\n    return this\n  }\n\n  /**\n   * Get last name property\n   *\n   * @type {string}\n   */\n  public getLastName(): string {\n    return this._lastName\n  }\n\n  /**\n   * Set Salutation\n   *\n   * @param {string} value\n   * @returns {Customer}\n   */\n  public setSalutation(value: Salutation): Customer {\n    this._salutation = value\n    return this\n  }\n\n  /**\n   * Get salutation\n   *\n   * @type {Salutation}\n   */\n  public getSalutation(): Salutation {\n    return this._salutation\n  }\n\n  /**\n   * Set CustomerId\n   *\n   * @param {string} value\n   * @returns {Customer}\n   */\n  public setCustomerId(value: string): Customer {\n    this._customerId = value\n    return this\n  }\n\n  /**\n   * Get customer Id\n   *\n   * @type {string}\n   */\n  public getCustomerId(): string {\n    return this._customerId\n  }\n\n  /**\n   * Set Company\n   *\n   * @param {string} value\n   * @returns {Customer}\n   */\n  public setCompany(value: string): Customer {\n    this._company = value\n    return this\n  }\n\n  /**\n   * Get Company\n   *\n   * @type {string}\n   */\n  public getCompany(): string {\n    return this._company\n  }\n\n  /**\n   * Set Birthday\n   *\n   * @param {string} value\n   * @returns {Customer}\n   */\n  public setBirthDate(value: string): Customer {\n    this._birthDate = value\n    return this\n  }\n\n  /**\n   * Get birthdate\n   *\n   * @type {Date}\n   */\n  public getBirthDate(): string {\n    return this._birthDate\n  }\n\n  /**\n   * Set Emaile\n   *\n   * @param {string} value\n   * @returns {Customer}\n   */\n  public setEmail(value: string): Customer {\n    this._email = value\n    return this\n  }\n\n  /**\n   * Get email\n   *\n   * @type {string}\n   */\n  public getEmail(): string {\n    return this._email\n  }\n\n  /**\n   * Set Phone\n   *\n   * @param {string} value\n   * @returns {Customer}\n   */\n  public setPhone(value: string): Customer {\n    this._phone = value\n    return this\n  }\n\n  /**\n   * Get phone\n   *\n   * @type {string}\n   */\n  public getPhone(): string {\n    return this._phone\n  }\n\n  /**\n   * Set Mobile\n   *\n   * @param {string} value\n   * @returns {Customer}\n   */\n  public setMobile(value: string): Customer {\n    this._mobile = value\n    return this\n  }\n\n  /**\n   * Get mobile\n   *\n   * @type {string}\n   */\n  public getMobile(): string {\n    return this._mobile\n  }\n\n  /**\n   * Set Address\n   *\n   * @param {Address} value\n   * @returns {Customer}\n   */\n  public setBillingAddress(value: Address): Customer {\n    this._billingAddress = value\n    return this\n  }\n\n  /**\n   * Get address\n   *\n   * @type {Address}\n   */\n  public getBillingAddress(): Address {\n    return this._billingAddress\n  }\n\n  /**\n   * Set Shipping Address\n   * @param value \n   */\n  public setShippingAddress(value: Address): Customer {\n    this._shippingAddress = value\n    return this\n  }\n\n  /**\n   * Set Shipping Address\n   * @param value \n   */\n  public getShippingAddress(): Address {\n    return this._shippingAddress\n  }\n\n  /**\n   * Set Company Information\n   *\n   * @param {CompanyInfo} companyInfo\n   * @returns {Customer}\n   */\n  public setCompanyInfo(companyInfo: CompanyInfo): Customer {\n    this._companyInfo = companyInfo\n    return this\n  }\n\n  /**\n   * Get Company Information\n   *\n   * @type {CompanyInfo}\n   */\n  public getCompanyInfo(): CompanyInfo {\n    return this._companyInfo\n  }\n}\n\nexport enum Salutation {\n  mr = 'mr',\n  mrs = 'mrs',\n  unknown = 'unknown'\n}\n\nexport type Address = {\n  name: string\n  street: string\n  state: string\n  zip: string\n  city: string\n  country: string\n}\n\nexport type CompanyInfo = {\n  registrationType: string\n  commercialRegisterNumber?: string\n  function?: string\n  commercialSector?: string\n}\n\nexport { Customer }\n","export default {\n  development: {\n    apiProtocol: 'https',\n    apiHost: 'dev-api.heidelpay.com',\n    apiVersion: 'v1',\n  },\n  staging: {\n    apiProtocol: 'https',\n    apiHost: 'stg-api.heidelpay.com',\n    apiVersion: 'v1',\n  },\n  production: {\n    apiProtocol: 'https',\n    apiHost: 'api.heidelpay.com',\n    apiVersion: 'v1',\n  },\n}\n  ","const Base64 = require('js-base64').Base64\nrequire('es6-promise').polyfill()\nrequire('isomorphic-fetch')\nimport Environment from '../configs/Environment'\nimport {SDK_TYPE, SDK_VERSION} from '../configs/Version'\n/**\n * Fetch Adapter\n *\n * @export\n * @class FetchAdapter\n */\nexport class FetchAdapter {\n  private api: string\n  private locale?: string\n\n  constructor(locale?: string, env?: string) {\n    let argsConfig\n\n    switch(env) {\n      case 'development':\n        argsConfig = Environment['development']\n        break\n      case 'staging':\n        argsConfig = Environment['staging']\n        break\n      default:\n        argsConfig = Environment['production']\n    }\n\n    const config = {\n      apiProtocol: argsConfig.apiProtocol,\n      apiHost: argsConfig.apiHost,\n      apiVersion: argsConfig.apiVersion,\n    }\n\n    this.locale = locale\n    this.api = `${config.apiProtocol}://${config.apiHost}/${config.apiVersion}`\n  }\n\n  /**\n   * @param  {string} url\n   */\n  public get(url: string, privateKey: string, isRawUrl: Boolean = false): Promise<Response> {\n    return this._fetch(\n      url,\n      {\n        method: 'GET'\n      },\n      privateKey,\n      isRawUrl\n    )\n  }\n\n  /**\n   * @param  {string} url\n   * @param  {object} body\n   */\n  public post(url: string, body: object, privateKey: string, isRawUrl: Boolean = false): Promise<Response> {\n    return this._fetch(\n      url,\n      {\n        method: 'POST',\n        body: JSON.stringify(body)\n      },\n      privateKey,\n      isRawUrl\n    )\n  }\n\n  /**\n   * @param  {string} url\n   * @param  {object} body\n   */\n  public put(url: string, body: object, privateKey: string) {\n    return this._fetch(\n      url,\n      {\n        method: 'PUT',\n        body: JSON.stringify(body)\n      },\n      privateKey\n    )\n  }\n\n  /**\n   * @param  {string} url\n   * @param  {object} body\n   */\n  public delete(url: string, body: object, privateKey: string) {\n    return this._fetch(\n      url,\n      {\n        method: 'DELETE',\n        body: JSON.stringify(body)\n      },\n      privateKey\n    )\n  }\n\n  private async _fetch(url: string, options: any = {}, privateKey: string, isRawUrl: Boolean = false): Promise<Response> {\n    return new Promise((resolve, reject) => {\n\n      const password = ''\n      const basicAuthValue = Base64.encode(`${privateKey}:${password}`)\n      const requestUrl = isRawUrl === true ? url : `${this.api}${url}`\n\n      fetch(requestUrl, {\n        headers: {\n          'SDK-TYPE': SDK_TYPE,\n          'SDK-VERSION': SDK_VERSION,\n          'Authorization': `Basic ${basicAuthValue}`,\n          'Accept-Language': this.locale || 'en_US',\n          'Content-Type': 'application/json'\n        },\n        ...options\n      })\n        .then(response => {\n          if (options.method === 'DELETE') {\n            resolve(this._parseJSON(response))\n          } else {\n            resolve(response.json())\n          }\n        })\n        .catch(error => {\n          reject(error)\n        })\n    })\n  }\n\n  private _parseJSON(response: any): any {\n    return response.text().then(function (text: any) {\n      return text ? JSON.parse(text) : ''\n    })\n  }\n}\n","export default (response: any) => {\n  throw new Error(JSON.stringify(response.errors))\n}\n","import PaymentType from '../payments/types/PaymentType'\nimport PaymentService from './PaymentService'\nimport AbstractPaymentType from '../payments/types/AbstractPaymentType'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (paymentType: AbstractPaymentType, paymentService: PaymentService): Promise<PaymentType> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n      .getRequestAdapter()\n      .post(\n        paymentType.getTypeUrl(),\n        paymentType.getPayload(),\n        paymentService.getUnzer().getPrivateKey()\n      )\n\n      // Handle errors response    \n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // Set Unzer instance\n      paymentType.setUnzer(paymentService.getUnzer())\n\n      // Set Payment Id\n      paymentType.setId(response.id)\n\n      if (response.geoLocation) {\n        paymentType.setGeoLocation(response.geoLocation)\n      }\n\n      // Resolve final result\n      resolve(paymentType)      \n    } catch (error) {\n      // Reject with error object\n      return reject(error) \n    }\n  })\n}\n","export const URL_PAYMENT = '/payments'\nexport const URL_PAYMENT_AUTHORIZE = `${URL_PAYMENT}/authorize`\nexport const URL_PAYMENT_AUTHORIZE_CANCEL = `${URL_PAYMENT}/{paymentId}/authorize/{authorizationId}/cancels`\nexport const URL_PAYMENT_CHARGE = `${URL_PAYMENT}/charges`\nexport const URL_PAYMENT_CHARGE_AUTHORIZE = `${URL_PAYMENT}/{paymentId}/charges`\nexport const URL_PAYMENT_CHARGE_CANCEL = `${URL_PAYMENT}/{paymentId}/charges/{chargeId}/cancels`\nexport const URL_PAYMENT_SHIPMENT = `${URL_PAYMENT}/{paymentId}/shipments`\nexport const URL_PAYMENT_PAYOUT = `${URL_PAYMENT}/payouts`\n\nexport const URL_CUSTOMER = '/customers'\nexport const URL_METADATA = '/metadata'\nexport const URL_BASKET = '/baskets'\nexport const URL_RECURRING = `/types/{typeId}/recurring`\nexport const URL_TYPE_BANCONTACT = '/types/bancontact'\nexport const URL_TYPE_CARD = '/types/card'\nexport const URL_TYPE_EPS = '/types/eps'\nexport const URL_TYPE_GIROPAY = '/types/giropay'\nexport const URL_TYPE_IDEAL = '/types/ideal'\nexport const URL_TYPE_INVOICE = '/types/invoice'\nexport const URL_TYPE_INVOICE_SECURED = '/types/invoice-secured'\nexport const URL_TYPE_PAYPAL = '/types/paypal'\nexport const URL_TYPE_PREPAYMENT = '/types/prepayment'\nexport const URL_TYPE_PRZELEWY24 = '/types/przelewy24'\nexport const URL_TYPE_SEPA_DIRECT_DEBIT = '/types/sepa-direct-debit'\nexport const URL_TYPE_SEPA_DIRECT_DEBIT_SECURED = '/types/sepa-direct-debit-secured'\nexport const URL_TYPE_SOFORT = '/types/sofort'\nexport const URL_TYPE_PIS = '/types/pis'\nexport const URL_TYPE_ALIPAY = '/types/alipay'\nexport const URL_TYPE_WECHATPAY = '/types/wechatpay'\nexport const URL_TYPE_INSTALLMENT_SECURED = '/types/installment-secured'\nexport const URL_TYPE_INSTALLMENT_SECURED_PLANS = '/types/installment-secured/plans'\n\nexport const URL_PAYPAGE_CHARGE = '/paypage/charge'\nexport const URL_PAYPAGE_AUTHORIZE = '/paypage/authorize'\n\nexport const URL_WEBHOOK = '/webhooks'\nexport const URL_LINKPAY = '/linkpay'\nexport const URL_LINKPAY_CHARGE = '/linkpay/charge'\nexport const URL_LINKPAY_AUTHORIZE = '/linkpay/authorize'\n","/*\n * @Author: Minh Tri Nguyen \n * @Date: 2018-11-20 12:07:38 \n * @Last Modified by: Minh Tri Nguyen\n * @Last Modified time: 2018-11-20 12:08:41\n */\nimport Unzer from '../../Unzer'\nimport Resources from './Resources'\nimport Payment from './Payment';\n\nexport default abstract class AbstractPayment {\n  private _id: string\n  private _unzer: Unzer\n  private _payment: Payment\n  private _payload: object\n\n  constructor(unzer: Unzer) {\n    this._unzer = unzer\n    this._id = ''\n  }\n\n  /**\n   * Set a payment object\n   *\n   * @param {Payment} payment\n   */\n  public setPayment(payment: Payment) {\n    this._payment = payment\n  }\n\n  /**\n   * Get payment object\n   *\n   * @returns {Payment}\n   */\n  public getPayment(): Payment {\n    return this._payment\n  }\n\n  /**\n   * Get instance Unzer\n   *\n   * @returns {Unzer}\n   */\n  public getUnzer(): Unzer {\n    return this._unzer\n  }\n\n  /**\n   * Set Payment Id\n   *\n   * @param {string} paymentId\n   */\n  public setId(paymentId: string): void {\n    this._id = paymentId\n  }\n\n  /**\n   * Get Payment Id\n   *\n   * @returns {string}\n   */\n  public getId(): string {\n    return this._id\n  }\n\n  /**\n   * Get payload object\n   *\n   * @returns {*}\n   */\n  public getPayload(): any {\n    return this._payload\n  }\n\n  /**\n   * Set payload object\n   *\n   * @param {*} payload\n   * @returns\n   */\n  public setPayload(payload: any) {\n    return this._payload = payload\n  }\n\n  abstract getResources(): Resources\n}\n","export default class Resources {\n  private typeId: string\n  private customerId: string\n  private metadataId: string\n  private paymentId: string\n  private basketId: string\n  private traceId: string\n\n  /**\n   * Get type Id\n   *\n   * @returns\n   */\n  public getTypeId() {\n    return this.typeId\n  }\n\n  /**\n   * Set type Id\n   *\n   * @param {string} typeId\n   * @returns\n   */\n  public setTypeId(typeId: string) {\n    this.typeId = typeId\n    return this\n  }\n\n  /**\n   * Get customer Id\n   *\n   * @returns {string}\n   */\n  public getCustomerId(): string {\n    return this.customerId\n  }\n\n  /**\n   * Set customer Id\n   *\n   * @param {string} customerId\n   * @returns {Resources}\n   */\n  public setCustomerId(customerId: string): Resources {\n    this.customerId = customerId\n    return this\n  }\n\n  /**\n   * Get meta data Id\n   *\n   * @returns {string}\n   */\n  public getMetadataId(): string {\n    return this.metadataId\n  }\n\n  /**\n   * Set meta data Id\n   *\n   * @param {string} metadataId\n   * @returns {Resources}\n   */\n  public setMetadataId(metadataId: string): Resources {\n    this.metadataId = metadataId\n    return this\n  }\n\n  /**\n   * Get payment Id\n   *\n   * @returns {string}\n   */\n  public getPaymentId(): string {\n    return this.paymentId\n  }\n\n  /**\n   * Set Payment Id\n   *\n   * @param {string} paymentId\n   * @returns {Resources}\n   */\n  public setPaymentId(paymentId: string): Resources {\n    this.paymentId = paymentId\n    return this\n  }\n\n  /**\n   * Get Basket Id\n   *\n   * @returns {string}\n   */\n  public getBasketId(): string {\n    return this.basketId\n  }\n\n  /**\n   * Set Trace Id\n   *\n   * @param {string} traceId\n   * @returns {Resources}\n   */\n  public setTraceId(traceId: string): Resources {\n    this.traceId = traceId\n    return this\n  }\n\n  /**\n   * Get Trace Id\n   *\n   * @returns {string}\n   */\n  public getTraceId(): string {\n    return this.traceId\n  }\n\n  /**\n   * Set Basket Id\n   *\n   * @param {string} paymentId\n   * @returns {Resources}\n   */\n  public setBasketId(basketId: string): Resources {\n    this.basketId = basketId\n    return this\n  }\n}\n","import AbstractPayment from './AbstractPayment'\nimport Unzer from '../../Unzer'\nimport Resources from './Resources'\nimport Authorization from './Authorization'\nimport Charge from './Charge'\nimport Cancel from './Cancel'\n\nexport default class Payment extends AbstractPayment {\n  private resources: Resources\n  private authorization: Authorization\n  private chargeList: Array<Charge>\n  private cancelList: Array<Cancel>\n\n  constructor(unzer: Unzer) {\n    super(unzer)\n    this.resources = new Resources()\n  }\n\n  /**\n   * Get resources\n   *\n   * @returns {Resources}\n   */\n  public getResources(): Resources {\n    return this.resources\n  }\n\n  /**\n   * Set resources\n   *\n   * @param {*} resources\n   */\n  public setResources(resources: any) {\n    this.resources\n      .setCustomerId(resources.customerId)\n      .setMetadataId(resources.metadataId)\n      .setPaymentId(resources.paymentId)\n      .setTypeId(resources.typeId)\n      .setTraceId(resources.traceId)\n  }\n\n  /**\n   * Set authorize transaction\n   *\n   * @param {Authorization} authorization\n   */\n  public setAuthorization(authorization: Authorization) {\n    this.authorization = authorization\n  }\n\n  /**\n   * Get authorize transaction\n   *\n   * @returns {Authorization}\n   */\n  public getAuthorization(): Authorization {\n    return this.authorization\n  }\n\n  /**\n   * Set list charge transactions\n   *\n   * @param {Array<Charge>} chargeList\n   */\n  public setChargeList(chargeList: Array<Charge>) {\n    this.chargeList = chargeList\n  }\n\n  /**\n   * Get list charge transactions\n   *\n   * @returns {Array<Charge>}\n   */\n  public getChargeList(): Array<Charge> {\n    return this.chargeList\n  }\n\n  /**\n   * Get charge transaction\n   *\n   * @param {string} chargeId\n   * @returns {Charge}\n   */\n  public getCharge(chargeId: string): Charge {\n    const chargeItem = this.getChargeList().find(\n      (item: Charge) => item.getId() === chargeId\n    ) as Charge\n\n    if (chargeItem && chargeItem.getId()) {\n      return chargeItem\n    }\n\n    throw new Error(`Charge Id is not found in list of transaction`)\n  }\n\n  /**\n   * Set list cancel transactions\n   *\n   * @param {Array<Cancel>} chargeList\n   */\n  public setCancelList(cancelList: Array<Cancel>) {\n    this.cancelList = cancelList\n  }\n\n  /**\n   * Get list cancel transactions\n   *\n   * @returns {Array<Cancel>}\n   */\n  public getCancelList(): Array<Cancel> {\n    return this.cancelList\n  }\n\n  /**\n   * Get cancel transaction\n   *\n   * @param {string} cancelId\n   * @returns {Cancel}\n   */\n  public getCancel(cancelId: string, refundId?: string): Cancel {\n    let cancelItem\n\n    if (refundId) {\n      // Find item in list of cancel with cancel Id and refund Id\n      cancelItem = this.getCancelList().find((item: Cancel) => item.getId() === cancelId && item.getRefundId() === refundId)\n    } else {\n      // Find item in list of cancel with only cancel Id\n      cancelItem = this.getCancelList().find((item: Cancel) => item.getId() === cancelId)\n    }\n\n    if (cancelItem && cancelItem.getId()) {\n      return cancelItem\n    }\n\n    throw new Error(`Cancel Id is not found in list of transaction`)\n  }\n}\n","import Unzer from '../../Unzer'\nimport Authorization, { authorizeObject } from '../business/Authorization'\nimport Charge, { chargeObject } from '../business/Charge'\n\nexport default abstract class AbstractPaymentType {\n  private _id: string\n  private _unzer: Unzer\n  private _geoLocation: any\n\n  public abstract getTypeUrl(): string\n  public abstract getPayload(): any\n\n  /**\n   * Set Unzer instance\n   *\n   * @param {Unzer} unzer\n   */\n  public setUnzer(unzer: Unzer) {\n    this._unzer = unzer\n  }\n\n  /**\n   * Get instance Unzer\n   *\n   * @returns {Unzer}\n   */\n  public getUnzer(): Unzer {\n    return this._unzer\n  }\n\n  /**\n   * Set Payment Id\n   *\n   * @param {string} paymentId\n   */\n  public setId(paymentId: string): void {\n    this._id = paymentId\n  }\n\n  /**\n   * Get Payment Id\n   *\n   * @returns {string}\n   */\n  public getId(): string {\n    return this._id\n  }\n\n  /**\n   * Authorize with payment card\n   *\n   * @param {authorizeObject} args\n   * @returns {Promise<Authorization>}\n   */\n  public authorize(args: authorizeObject): Promise<Authorization> {\n    return this.getUnzer().authorize(args)\n  }\n\n  /**\n   * Charge on authorize\n   *\n   * @param {chargeAuthorizeObject} args\n   * @returns {Promise<Charge>}\n   */\n  public charge(args: chargeObject): Promise<Charge> {\n    return this.getUnzer().charge(args)\n  }\n\n  /**\n   * Get geoLocation\n   *\n   * @returns {any}\n   */\n  public getGeoLocation(): any {\n    return this._geoLocation\n  }\n\n  /**\n   * Set geoLocation\n   *\n   * @param {any} geoLocation\n   * @returns {any}\n   */\n  public setGeoLocation(geoLocation: any): any {\n    this._geoLocation = geoLocation\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class Card extends AbstractPaymentType implements PaymentType {\n  private _recurring: boolean\n  private _brand: string\n  private _number: string\n  private _cvc: string\n  private _expiryDate: string\n  private _cardHolder: string\n  private _email: string\n  private _3ds: boolean\n  private _cardDetails: any\n\n  constructor(number: string = '', expiryDate: string = '') {\n    super()\n    this._number = number\n    this._expiryDate = expiryDate\n    this._cardHolder = ''\n    this._cardDetails = {}\n  }\n\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_CARD\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    const payload: any = {\n      number: this.getNumber(),\n      cvc: this.getCVC(),\n      expiryDate: this.getExpiryDate()\n    }\n\n    if(this.get3ds() !== undefined) {\n      payload['3ds'] = this.get3ds()\n    }\n\n    if(this.getEmail() !== undefined) {\n      payload['email'] = this.getEmail()\n    }\n\n    return payload\n  }\n\n  /**\n   * Set pan number\n   *\n   * @param {string} number\n   * @returns {Card}\n   */\n  public setNumber(number: string): Card {\n    this._number = number\n    return this\n  }\n\n  /**\n   * Get pan number\n   *\n   * @returns {string}\n   */\n  public getNumber(): string {\n    return this._number\n  }\n\n  /**\n   * Set CVC number\n   *\n   * @param {string} cvc\n   * @returns {Card}\n   */\n  public setCVC(cvc: string): Card {\n    this._cvc = cvc\n    return this\n  }\n\n  /**\n   * Get CVC\n   *\n   * @returns {string}\n   */\n  public getCVC(): string {\n    return this._cvc\n  }\n\n  /**\n   * Set expiry date\n   *\n   * @param {string} expiryDate\n   * @returns {Card}\n   */\n  public setExpiryDate(expiryDate: string): Card {\n    this._expiryDate = expiryDate\n    return this\n  }\n\n  /**\n   * Get expirty Date\n   *\n   * @returns {string}\n   */\n  public getExpiryDate(): string {\n    return this._expiryDate\n  }\n\n  /**\n   * Set card holder\n   *\n   * @param {string} cardHolder\n   * @returns {Card}\n   */\n  public setCardHolder(cardHolder: string): Card {\n    this._cardHolder = cardHolder\n    return this\n  }\n\n  /**\n   * Get card holder\n   *\n   * @returns {string}\n   */\n  public getCardHolder(): string {\n    return this._cardHolder\n  }\n\n  /**\n   * Set email\n   *\n   * @param {string} email\n   * @returns {Card}\n   */\n  public setEmail(email: string): Card {\n    this._email = email\n    return this\n  }\n\n  /**\n   * Get email\n   *\n   * @returns {string}\n   */\n  public getEmail(): string {\n    return this._email\n  }\n\n  /**\n   * Set brand name\n   *\n   * @param {string} brand\n   * @returns {Card}\n   */\n  public setBrand(brand: string): Card {\n    this._brand = brand\n    return this\n  }\n\n  /**\n   * Get brand name\n   *\n   * @returns {string}\n   */\n  public getBrand(): string {\n    return this._brand\n  }\n\n  /**\n   * Set recurring option\n   *\n   * @param {string} recurring\n   * @returns {Card}\n   */\n  public setRecurring(recurring: boolean): Card {\n    this._recurring = recurring\n    return this\n  }\n\n  /**\n   * Get recurring option\n   *\n   * @returns {string}\n   */\n  public getRecurring(): boolean {\n    return this._recurring\n  }\n\n  /**\n   * Set card detail\n   *\n   * @param {object} cardDetail\n   * @returns {Card}\n   */\n  public setCardDetails(cardDetails: any): Card {\n    this._cardDetails = cardDetails\n    return this\n  }\n\n  /**\n   * Get card detail\n   *\n   * @returns {object}\n   */\n  public getCardDetails(): any {\n    return this._cardDetails\n  }\n\n  /**\n   * Set 3ds option\n   *\n   * @param {string} expiryDate\n   * @returns {Card}\n   */\n  public set3ds(secure: boolean): Card {\n    this._3ds = secure\n    return this\n  }\n\n  /**\n   * Get 3ds option\n   *\n   * @returns {string}\n   */\n  public get3ds(): boolean {\n    return this._3ds\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class Eps extends AbstractPaymentType implements PaymentType {\n  private _bic: string\n\n  /**\n   * Set BIC\n   *\n   * @param {string} bic\n   * @returns {Eps}\n   */\n  public setBic(bic: string): Eps {\n    this._bic = bic\n    return this\n  }\n\n  /**\n   * Get BIC\n   *\n   * @returns {string}\n   */\n  public getBic(): string {\n    return this._bic\n  }\n\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_EPS\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    if(typeof this.getBic() === 'undefined') {\n        return {}\n    }\n\n    return {\n      bic: this.getBic()\n    }\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class Giropay extends AbstractPaymentType implements PaymentType {\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_GIROPAY\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {}\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport PaymentType from './PaymentType'\nimport AbstractPaymentType from './AbstractPaymentType'\n\nexport default class Paypal extends AbstractPaymentType implements PaymentType {\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_PAYPAL\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {}\n  }\n}","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class Ideal extends AbstractPaymentType implements PaymentType {\n  private _bic: string\n\n  /**\n   * Set BIC\n   *\n   * @param {string} bic\n   * @returns {Ideal}\n   */\n  public setBic(bic: string): Ideal {\n    this._bic = bic\n    return this\n  }\n\n  /**\n   * Get BIC\n   *\n   * @returns {string}\n   */\n  public getBic(): string {\n    return this._bic\n  }\n\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_IDEAL\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {\n      bic: this.getBic()\n    }\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class Invoice extends AbstractPaymentType implements PaymentType {\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_INVOICE\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {}\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class Prepayment extends AbstractPaymentType implements PaymentType {\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_PREPAYMENT\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {}\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class Przelewy24 extends AbstractPaymentType implements PaymentType {\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_PRZELEWY24\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {}\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport PaymentType from './PaymentType'\nimport AbstractPaymentType from './AbstractPaymentType'\n\nexport default class SepaDirectDebit extends AbstractPaymentType implements PaymentType {\n  private _iban: string\n  private _bic: string\n  private _holder: string\n\n  constructor(iban?: string) {\n    super()\n    this._iban = iban || ''\n  }\n\n  /**\n   * Set iban number\n   *\n   * @param {string} iban\n   * @returns {SepaDirectDebit}\n   */\n  public setIban(iban: string): SepaDirectDebit {\n    this._iban = iban\n    return this\n  }\n\n  /**\n   * Get iban number\n   *\n   * @returns {string}\n   */\n  public getIban(): string {\n    return this._iban\n  }\n\n  /**\n   * Set bic number\n   *\n   * @param {string} bic\n   * @returns {Card}\n   */\n  public setBic(bic: string): SepaDirectDebit {\n    this._bic = bic\n    return this\n  }\n\n  /**\n   * Get bic number\n   *\n   * @returns {string}\n   */\n  public getBic(): string {\n    return this._bic\n  }\n\n  /**\n   * Set holder\n   *\n   * @param {string} holder\n   * @returns {Card}\n   */\n  public setHolder(holder: string): SepaDirectDebit {\n    this._holder = holder\n    return this\n  }\n\n  /**\n   * Get holder\n   *\n   * @returns {string}\n   */\n  public getHolder(): string {\n    return this._holder\n  }\n\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_SEPA_DIRECT_DEBIT\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {\n      iban: this.getIban(),\n      bic: this.getBic(),\n      holder: this.getHolder(),\n    }\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class SepaDirectDebitSecured extends AbstractPaymentType implements PaymentType {\n  private _iban: string\n  private _bic: string\n  private _holder: string\n\n  constructor(iban?: string) {\n    super()\n    this._iban = iban || ''\n  }\n\n  /**\n   * Set iban number\n   *\n   * @param {string} iban\n   * @returns {SepaDirectDebitSecured}\n   */\n  public setIban(iban: string): SepaDirectDebitSecured {\n    this._iban = iban\n    return this\n  }\n\n  /**\n   * Get iban number\n   *\n   * @returns {string}\n   */\n  public getIban(): string {\n    return this._iban\n  }\n\n  /**\n   * Set bic number\n   *\n   * @param {string} bic\n   * @returns {Card}\n   */\n  public setBic(bic: string): SepaDirectDebitSecured {\n    this._bic = bic\n    return this\n  }\n\n  /**\n   * Get bic number\n   *\n   * @returns {string}\n   */\n  public getBic(): string {\n    return this._bic\n  }\n\n  /**\n   * Set holder\n   *\n   * @param {string} holder\n   * @returns {Card}\n   */\n  public setHolder(holder: string): SepaDirectDebitSecured {\n    this._holder = holder\n    return this\n  }\n\n  /**\n   * Get holder\n   *\n   * @returns {string}\n   */\n  public getHolder(): string {\n    return this._holder\n  }\n\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_SEPA_DIRECT_DEBIT_SECURED\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {\n      iban: this.getIban(),\n      bic: this.getBic(),\n      holder: this.getHolder(),\n    }\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class Sofort extends AbstractPaymentType implements PaymentType {\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_SOFORT\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {}\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class Pis extends AbstractPaymentType implements PaymentType {\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_PIS\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {}\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class Alipay extends AbstractPaymentType implements PaymentType {\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_ALIPAY\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {}\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class WechatPay extends AbstractPaymentType implements PaymentType {\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_WECHATPAY\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    return {}\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class Bancontact extends AbstractPaymentType implements PaymentType {\n  private _holder: string\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_BANCONTACT\n  }\n\n  /**\n * Set holder\n *\n * @param {string} cardHolder\n * @returns {Card}\n */\n  public setHolder(holder: string): Bancontact {\n    this._holder = holder\n    return this\n  }\n\n  /**\n   * Get holder\n   *\n   * @returns {string}\n   */\n  public getHolder(): string {\n    return this._holder\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    if (typeof this.getHolder() === 'undefined') {\n      return {}\n    }\n\n    return {\n      holder: this._holder\n    }\n  }\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class InstallmentSecured extends AbstractPaymentType implements PaymentType {\n  private _iban: string\n  private _bic: string\n  private _accountHolder: string\n  private _invoiceDate: string\n  private _invoiceDueDate: string\n\n  private _numberOfRates: number\n  private _dayOfPurchase: string\n  private _orderDate: string\n  private _totalPurchaseAmount: number\n  private _totalInterestAmount: number\n  private _totalAmount: number\n  private _effectiveInterestRate: number\n  private _nominalInterestRate: number\n  private _feeFirstRate: number\n  private _feePerRate: number\n  private _monthlyRate: number\n  private _lastRate: number\n\n  constructor() {\n    super()\n  }\n\n  /**\n   * Set Iban\n   *\n   * @param {string} iban\n   * @returns {InstallmentSecured}\n   */\n  public setIban(iban: string): InstallmentSecured {\n    this._iban = iban\n    return this\n  }\n\n  /**\n   * Get Iban\n   *\n   * @returns {string}\n   */\n  public getIban(): string {\n    return this._iban\n  }\n\n  /**\n   * Set BIC\n   *\n   * @param {string} bic\n   * @returns {InstallmentSecured}\n   */\n  public setBic(bic: string): InstallmentSecured {\n    this._bic = bic\n    return this\n  }\n\n  /**\n   * Get Bic\n   *\n   * @returns {string}\n   */\n  public getBic(): string {\n    return this._bic\n  }\n\n  /**\n   * Set Account Holader\n   *\n   * @param {string} accountHolder\n   * @returns {InstallmentSecured}\n   */\n  public setAccountHolder(accountHolder: string): InstallmentSecured {\n    this._accountHolder = accountHolder\n    return this\n  }\n\n  /**\n   * Get Account Holder\n   *\n   * @returns {string}\n   */\n  public getAccountHolder(): string {\n    return this._accountHolder\n  }\n\n  /**\n   * Set Invoice Date\n   *\n   * @param {string} invoiceDate\n   * @returns {InstallmentSecured}\n   */\n  public setInvoiceDate(invoiceDate: string): InstallmentSecured {\n    this._invoiceDate = invoiceDate\n    return this\n  }\n\n  /**\n   * Get Invoice Date\n   *\n   * @returns {string}\n   */\n  public getInvoiceDate(): string {\n    return this._invoiceDate\n  }\n\n  /**\n   * Set Invoice Due Date\n   *\n   * @param {string} invoiceDueDate\n   * @returns {InstallmentSecured}\n   */\n  public setInvoiceDueDate(invoiceDueDate: string): InstallmentSecured {\n    this._invoiceDueDate = invoiceDueDate\n    return this\n  }\n\n  /**\n   * Get Invoice Due Date\n   *\n   * @returns {string}\n   */\n  public getInvoiceDueDate(): string {\n    return this._invoiceDueDate\n  }\n\n  /**\n   * Set Number of Rate\n   *\n   * @param {string} numberOfRates\n   * @returns {InstallmentSecured}\n   */\n  public setNumberOfRates(numberOfRates: number): InstallmentSecured {\n    this._numberOfRates = numberOfRates\n    return this\n  }\n\n  /**\n   * Get Number of Rate\n   *\n   * @returns {string}\n   */\n  public getNumberOfRates(): number {\n    return this._numberOfRates\n  }\n\n  /**\n   * Set Day of purchase\n   *\n   * @param {string} dayOfPurchase\n   * @returns {InstallmentSecured}\n   */\n  public setDayOfPurchase(dayOfPurchase: string): InstallmentSecured {\n    this._dayOfPurchase = dayOfPurchase\n    return this\n  }\n\n  /**\n   * Get Day of Purchase\n   *\n   * @returns {string}\n   */\n  public getDayOfPurchase(): string {\n    return this._dayOfPurchase\n  }\n\n  /**\n   * Set Order Date\n   *\n   * @param {string} orderDate\n   * @returns {InstallmentSecured}\n   */\n  public setOrderDate(orderDate: string): InstallmentSecured {\n    this._orderDate = orderDate\n    return this\n  }\n\n  /**\n   * Get Order Date\n   *\n   * @returns {string}\n   */\n  public getOrderDate(): string {\n    return this._orderDate\n  }\n\n  /**\n   * Set Total Purchase Amount\n   *\n   * @param {number} totalPurchaseAmount\n   * @returns {InstallmentSecured}\n   */\n  public setTotalPurchaseAmount(totalPurchaseAmount: number): InstallmentSecured {\n    this._totalPurchaseAmount = totalPurchaseAmount\n    return this\n  }\n\n  /**\n   * Get Total Purchase Amount\n   *\n   * @returns {number}\n   */\n  public getTotalPurchaseAmount(): number {\n    return this._totalPurchaseAmount\n  }\n\n  /**\n   * Set Interest Amount\n   *\n   * @param {number} totalInterestAmount\n   * @returns {InstallmentSecured}\n   */\n  public setTotalInterestAmount(totalInterestAmount: number): InstallmentSecured {\n    this._totalInterestAmount = totalInterestAmount\n    return this\n  }\n\n  /**\n   * Get Interest Amount\n   *\n   * @returns {number}\n   */\n  public getTotalInterestAmount(): number {\n    return this._totalInterestAmount\n  }\n\n  /**\n   * Set Total Amount\n   *\n   * @param {number} totalAmount\n   * @returns {InstallmentSecured}\n   */\n  public setTotalAmount(totalAmount: number): InstallmentSecured {\n    this._totalAmount = totalAmount\n    return this\n  }\n\n  /**\n   * Get Total Amount\n   *\n   * @returns {number}\n   */\n  public getTotalAmount(): number {\n    return this._totalAmount\n  }\n\n  /**\n   * Set Effective Interest Rate\n   *\n   * @param {number} effectiveInterestRate\n   * @returns {InstallmentSecured}\n   */\n  public setEffectiveInterestRate(effectiveInterestRate: number): InstallmentSecured {\n    this._effectiveInterestRate = effectiveInterestRate\n    return this\n  }\n\n  /**\n   * Get Effective Interest Rate\n   *\n   * @returns {number}\n   */\n  public getEffectiveInterestRate(): number {\n    return this._effectiveInterestRate\n  }\n\n  /**\n   * Set Nominal Interest Rate\n   *\n   * @param {number} nominalInterestRate\n   * @returns {InstallmentSecured}\n   */\n  public setNominalInterestRate(nominalInterestRate: number): InstallmentSecured {\n    this._nominalInterestRate = nominalInterestRate\n    return this\n  }\n\n  /**\n   * Get Nominal Interest Rate\n   *\n   * @returns {number}\n   */\n  public getNominalInterestRate(): number {\n    return this._nominalInterestRate\n  }\n\n  /**\n   * Set Fee First Rate\n   *\n   * @param {number} feeFirstRate\n   * @returns {InstallmentSecured}\n   */\n  public setFeeFirstRate(feeFirstRate: number): InstallmentSecured {\n    this._feeFirstRate = feeFirstRate\n    return this\n  }\n\n  /**\n   * Get Nominal Interest Rate\n   *\n   * @returns {number}\n   */\n  public getFeeFirstRate(): number {\n    return this._feeFirstRate\n  }\n\n  /**\n   * Set Fee Per Rate\n   *\n   * @param {number} feePerRate\n   * @returns {InstallmentSecured}\n   */\n  public setFeePerRate(feePerRate: number): InstallmentSecured {\n    this._feePerRate = feePerRate\n    return this\n  }\n\n  /**\n   * Get Nominal Interest Rate\n   *\n   * @returns {number}\n   */\n  public getFeePerRate(): number {\n    return this._feePerRate\n  }\n\n  /**\n   * Set Monthly Rate\n   *\n   * @param {number} monthlyRate\n   * @returns {InstallmentSecured}\n   */\n  public setMonthlyRate(monthlyRate: number): InstallmentSecured {\n    this._monthlyRate = monthlyRate\n    return this\n  }\n\n  /**\n   * Get Monthly Rate\n   *\n   * @returns {number}\n   */\n  public getMonthlyRate(): number {\n    return this._monthlyRate\n  }\n\n  /**\n   * Set Last Rate\n   *\n   * @param {number} lastRate\n   * @returns {InstallmentSecured}\n   */\n  public setLastRate(lastRate: number): InstallmentSecured {\n    this._lastRate = lastRate\n    return this\n  }\n\n  /**\n   * Get Monthly Rate\n   *\n   * @returns {number}\n   */\n  public getLastRate(): number {\n    return this._lastRate\n  }\n\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_INSTALLMENT_SECURED\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns {*}\n   */\n  public getPayload(): any {\n    return {\n      iban: this.getIban(),\n      bic: this.getBic(),\n      accountHolder: this.getAccountHolder(),\n      invoiceDate: this.getInvoiceDate(),\n      invoiceDueDate: this.getInvoiceDueDate(),\n      numberOfRates: this.getNumberOfRates(),\n      dayOfPurchase: this.getDayOfPurchase(),\n      totalPurchaseAmount: this.getTotalPurchaseAmount(),\n      totalInterestAmount: this.getTotalInterestAmount(),\n      totalAmount: this.getTotalAmount(),\n      effectiveInterestRate: this.getEffectiveInterestRate(),\n      nominalInterestRate: this.getNominalInterestRate(),\n      feeFirstRate: this.getFeeFirstRate(),\n      feePerRate: this.getFeePerRate(),\n      monthlyRate: this.getMonthlyRate(),\n      lastRate: this.getLastRate(),\n    }\n  }\n}\n\nexport type updateInstallmentSecuredObject = {\n  iban?: string,\n  bic?: string,\n  accountHolder?: string,\n  invoiceDate?: string,\n  invoiceDueDate?: string,\n}","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class InvoiceSecured extends AbstractPaymentType implements PaymentType {\n  private _invoiceId: string\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_INVOICE_SECURED\n  }\n\n  \n  /**\n   * Set Invoice Id\n   *\n   * @param {string} invoiceId\n   */\n  public setInvoiceId(invoiceId: string): void {\n    this._invoiceId = invoiceId\n  }\n\n  /**\n   * Get Invoice Id\n   *\n   * @returns {string}\n   */\n  public getInvoiceId(): string {\n    return this._invoiceId\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    if (typeof this.getInvoiceId() === 'undefined') {\n      return {}\n    }\n    \n    return {\n      invoiceId: this._invoiceId\n    }\n  }\n}\n","import Card from '../payments/types/Card'\nimport AbstractPaymentType from '../payments/types/AbstractPaymentType'\nimport EPS from '../payments/types/Eps'\nimport Giropay from '../payments/types/Giropay'\nimport Paypal from '../payments/types/Paypal'\nimport Ideal from '../payments/types/Ideal'\nimport Invoice from '../payments/types/Invoice'\nimport Prepayment from '../payments/types/Prepayment'\nimport Przelewy24 from '../payments/types/Przelewy24'\nimport SepaDirectDebit from '../payments/types/SepaDirectDebit'\nimport SepaDirectDebitSecured from '../payments/types/SepaDirectDebitSecured'\nimport Sofort from '../payments/types/Sofort'\nimport PIS from '../payments/types/Pis'\nimport Alipay from '../payments/types/Alipay'\nimport WechatPay from '../payments/types/WechatPay'\nimport Bancontact from '../payments/types/Bancontact'\nimport InstallmentSecured from '../payments/types/InstallmentSecured'\nimport InvoiceSecured from '../payments/types/InvoiceSecured'\n\n/**\n * Replace URL with parameters: {paymentId} => s-pay-1781\n *\n * @param {string} url\n * @param {*} args\n * @returns\n */\nexport const replaceUrl = (url: string, args: any) => {\n  const regex = /{([a-zA-Z]+)}/gm\n\n  const urlReplaced = url.replace(regex, (matches, item) => {\n    return args[item] || ''\n  })\n\n  return urlReplaced\n}\n\n/**\n * Get refund id from url\n *\n * Ex:\n * <domain>payments/s-pay-3883/charges/s-chg-1/cancels/s-cnl-1\n * It should return s-chg-1 as refund Id of this cancel\n *\n * @param {string} url\n * @returns\n */\nexport const getRefundIdOfCancel = (url: string) => {\n  const regex = /\\/([a-zA-Z-0-9]+)\\/cancels/gm\n  const matches = regex.exec(url)\n\n  return matches ? matches[1] : ''\n}\n\n/**\n * Get payment type from typeId\n * Ex:\n * crd => Card()\n * gro => GrioPay()\n * @param {string} typeId\n * @returns {AbstractPaymentType}\n */\nexport const getPaymentTypeFromTypeId = (typeId: string): AbstractPaymentType => {\n  if (typeId.length < 5) {\n    throw new Error(`Type ${typeId} is currently not supported by the SDK`)\n  }\n\n  const paymentType = typeId.substring(2, 5)\n  switch (paymentType) {\n    case 'crd':\n      return new Card()\n    case 'eps':\n      return new EPS()\n    case 'gro':\n      return new Giropay()\n    case 'ppl':\n      return new Paypal()\n    case 'idl':\n      return new Ideal()\n    case 'ivc':\n      return new Invoice()\n    case 'ivg':\n    case 'ivf':\n    case 'ivs':\n      return new InvoiceSecured()\n    case 'ppy':\n      return new Prepayment()\n    case 'p24':\n      return new Przelewy24()\n    case 'sdd':\n      return new SepaDirectDebit(\"\")\n    case 'ddg':\n    case 'dds':\n      return new SepaDirectDebitSecured(\"\")\n    case 'sft':\n      return new Sofort()\n    case 'pis':\n      return new PIS()\n    case 'ali':\n      return new Alipay()\n    case 'wcp':\n      return new WechatPay()\n    case 'bct':\n      return new Bancontact()\n    case 'hdd':\n    case 'ins':\n      return new InstallmentSecured()\n    default:\n      throw new Error(`Type ${typeId} is currently not supported by the SDK`)\n  }\n}\n\n/**\n * Map response with propery payment Type\n *\n * @param {*} response\n * @returns {AbstractPaymentType}\n */\nexport const mapResponsePaymentType = (response: any): AbstractPaymentType => {\n  switch (response.method) {\n    case 'card':\n      const card: Card = new Card()\n        .setNumber(response.number)\n        .setExpiryDate(response.expiryDate)\n        .setCVC(response.cvc)\n        .setBrand(response.brand)\n        .setRecurring(response.recurring)\n      \n\n      if (response.cardHolder) {\n        card.setCardHolder(response.cardHolder)\n      }\n\n      if (response.cardDetails) {\n        card.setCardDetails(response.cardDetails)\n      }\n      \n      if (response.email) {\n        card.setEmail(response.email)\n      }\n\n      card.setId(response.id)\n      card.setGeoLocation(response.geoLocation)\n      return card\n\n    case 'EPS':\n      const eps: EPS = new EPS().setBic(response.bic)\n\n      eps.setId(response.id)\n      eps.setGeoLocation(response.geoLocation)\n      return eps\n      \n    case 'giropay':\n      const giropay: Giropay = new Giropay()\n\n      giropay.setId(response.id)\n      giropay.setGeoLocation(response.geoLocation)\n      return giropay\n    \n    case 'paypal':\n      const paypal: Paypal = new Paypal()\n\n      paypal.setId(response.id)\n      paypal.setGeoLocation(response.geoLocation)\n      return paypal\n\n    case 'ideal':\n      const ideal: Ideal = new Ideal().setBic(response.bic)\n\n      ideal.setId(response.id)\n      ideal.setGeoLocation(response.geoLocation)\n      return ideal\n\n    case 'invoice':\n      const invoice: Invoice = new Invoice()\n\n      invoice.setId(response.id)\n      invoice.setGeoLocation(response.geoLocation)\n      return invoice\n\n    case 'invoice-guaranteed':\n    case 'invoice-factoring':\n    case 'invoice-secured':\n      const invoiceSecured: InvoiceSecured = new InvoiceSecured()\n\n      invoiceSecured.setId(response.id)\n      invoiceSecured.setGeoLocation(response.geoLocation)\n      return invoiceSecured\n\n    case 'przelewy24':\n      const przelewy24: Przelewy24 = new Przelewy24()\n\n      przelewy24.setId(response.id)\n      przelewy24.setGeoLocation(response.geoLocation)\n      return przelewy24\n\n    case 'prepayment':\n      const prepayment: Prepayment = new Prepayment()\n\n      prepayment.setId(response.id)\n      prepayment.setGeoLocation(response.geoLocation)\n      return prepayment\n\n    case 'sepa-direct-debit':\n      const sepaDirectDebit: SepaDirectDebit = new SepaDirectDebit(response.iban)\n        .setBic(response.bic)\n        .setHolder(response.holder)\n\n      sepaDirectDebit.setId(response.id)\n      sepaDirectDebit.setGeoLocation(response.geoLocation)\n      return sepaDirectDebit\n\n    case 'sepa-direct-debit-guaranteed':\n    case 'sepa-direct-debit-secured':\n      const dds: SepaDirectDebitSecured = new SepaDirectDebitSecured(response.iban)\n        .setBic(response.bic)\n        .setHolder(response.holder)\n\n        dds.setId(response.id)\n        dds.setGeoLocation(response.geoLocation)\n        return dds\n\n    case 'sofort':\n      const sofort: Sofort = new Sofort()\n\n      sofort.setId(response.id)\n      sofort.setGeoLocation(response.geoLocation)\n      return sofort\n\n    case 'PIS':\n      const pis: PIS = new PIS()\n\n      pis.setId(response.id)\n      pis.setGeoLocation(response.geoLocation)\n      return pis\n\n    case 'alipay':\n      const alipay: Alipay = new Alipay()\n\n      alipay.setId(response.id)\n      alipay.setGeoLocation(response.geoLocation)\n      return alipay\n\n    case 'wechatpay':\n      const wechatpay: WechatPay = new WechatPay()\n\n      wechatpay.setId(response.id)\n      wechatpay.setGeoLocation(response.geoLocation)\n      return wechatpay\n\n    case 'bancontact':\n      const bancontact: Bancontact = new Bancontact()\n\n      if (response.holder) {\n        bancontact.setHolder(response.holder)\n      }\n\n      bancontact.setId(response.id)\n      bancontact.setGeoLocation(response.geoLocation)\n      return bancontact\n\n    case 'installment-secured':\n    case 'hire-purchase-direct-debit':\n      const installmentSecured: InstallmentSecured = new InstallmentSecured()\n\n      installmentSecured\n        .setIban(response.iban)\n        .setBic(response.bic)\n        .setAccountHolder(response.accountHolder)\n        .setOrderDate(response.orderDate)\n        .setNumberOfRates(response.numberOfRates)\n        .setDayOfPurchase(response.dayOfPurchase)\n        .setTotalPurchaseAmount(response.totalPurchaseAmount)\n        .setTotalInterestAmount(response.totalInterestAmount)\n        .setEffectiveInterestRate(response.effectiveInterestRate)\n        .setNominalInterestRate(response.nominalInterestRate)\n        .setFeeFirstRate(response.feeFirstRate)\n        .setFeePerRate(response.feePerRate)\n        .setMonthlyRate(response.monthlyRate)\n        .setLastRate(response.lastRate)\n        .setInvoiceDate(response.invoiceDate)\n        .setInvoiceDueDate(response.invoiceDueDate)\n\n      installmentSecured.setId(response.id)\n      installmentSecured.setGeoLocation(response.geoLocation)\n      return installmentSecured\n\n    default:\n      throw new Error(`Type ${response.method} is currently not supported by the SDK`)\n  }\n}\n","export default class Processing {\n  private _uniqueId: string\n  private _shortId: string\n  \n  /**\n   * Get UniqueId\n   *\n   * @returns {string}\n   */\n  public getUniqueId(): string {\n    return this._uniqueId\n  }\n\n  /**\n   * Set Unique Id\n   *\n   * @param {string} uniqueId\n   * @returns {Processing}\n   */\n  public setUniqueId(uniqueId: string): Processing {\n    this._uniqueId = uniqueId\n    return this\n  }\n\n  /**\n   * Get Short Id\n   *\n   * @returns {string}\n   */\n  public getShortId(): string {\n    return this._shortId\n  }\n\n  /**\n   * Set Short Id\n   *\n   * @param {string} shortId\n   * @returns {Processing}\n   */\n  public setShortId(shortId: string): Processing {\n    this._shortId = shortId\n    return this\n  }\n}\n","import AbstractPayment from './AbstractPayment'\nimport Unzer from '../../Unzer'\nimport Resources from './Resources'\nimport Processing from './Processing';\n\nexport default class Cancel extends AbstractPayment {\n  private amount: string\n  private orderId: string\n  private refundId: string\n  private paymentReference: string\n  private resources: Resources\n  private processing: Processing\n\n  constructor(unzer: Unzer) {\n    super(unzer)\n    this.resources = new Resources()\n    this.processing = new Processing()\n  }\n\n  /**\n   * Get Amount\n   *\n   * @returns {string}\n   */\n  public getAmount(): string {\n    return this.amount\n  }\n\n  /**\n   * Set Amount\n   *\n   * @param {string} amount\n   */\n  public setAmount(amount: string) {\n    this.amount = amount\n  }\n\n  /**\n   * Get Order OId\n   *\n   * @returns {string}\n   */\n  public getOrderId(): string {\n    return this.orderId\n  }\n\n  /**\n   * Set Amount\n   *\n   * @param {string} amount\n   */\n  public setOrderId(orderId: string) {\n    this.orderId = orderId\n  }\n\n  /**\n   * Get refund Id\n   *\n   * @returns {string}\n   */\n  public getRefundId(): string {\n    return this.refundId\n  }\n\n  /**\n   * Set refund Id\n   *\n   * @param {string} refund Id\n   */\n  public setRefundId(refundId: string) {\n    this.refundId = refundId\n  }\n\n  /**\n   * Set Payment Reference\n   *\n   * @param {string} paymentReference\n   */\n  public setPaymentReference(paymentReference: string) {\n    this.paymentReference = paymentReference\n  }\n\n  /**\n   * Get Payment Reference\n   *\n   * @returns\n   */\n  public getPaymentReference() {\n    return this.paymentReference\n  }\n\n  /**\n   * Get resources\n   *\n   * @returns {Resources}\n   */\n  public getResources(): Resources {\n    return this.resources\n  }\n\n  /**\n   * Set resources\n   *\n   * @param {*} resources\n   */\n  public setResources(resources: any) {\n    this.resources\n      .setCustomerId(resources.customerId)\n      .setMetadataId(resources.metadataId)\n      .setPaymentId(resources.paymentId)\n      .setTypeId(resources.typeId)\n      .setTraceId(resources.traceId)\n  }\n\n  /**\n   * Get Processing\n   *\n   * @returns {Processing}\n   */\n  public getProcessing(): Processing {\n    return this.processing\n  }\n\n  /**\n   * Set Processing\n   *\n   * @param {*} processing\n   */\n  public setProcessing(processing: any) {\n    this.processing\n      .setUniqueId(processing.uniqueId)\n      .setShortId(processing.shortId)\n  }\n}\n\nexport type cancelAuthorizeObject = {\n  paymentId: string\n  paymentReference?: string\n  authorizationId: string\n  amount?: number\n}\n\nexport type cancelChargeObject = {\n  paymentId: string\n  paymentReference?: string\n  chargeId: string\n  amount?: number,\n  amountGross?: string,\n  amountNet?: string,\n  amountVat?: string\n}\n","import PaymentService from './PaymentService'\nimport Cancel from '../payments/business/Cancel'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (args: string, paymentService: PaymentService): Promise<Cancel> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .get(args, paymentService.getUnzer().getPrivateKey(), true)\n\n      // Handle errors response\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // New Cancel with Hedeipay instance\n      let cancel = new Cancel(paymentService.getUnzer())\n\n      // Set cancel Id\n      cancel.setId(response.id)\n\n      // Set amount of cancel\n      cancel.setAmount(response.amount)\n\n      // Set order Id\n      if(response.orderId) {\n        cancel.setOrderId(response.orderId)\n      }\n\n      // Set payment reference\n      if(response.paymentReference) {\n        cancel.setPaymentReference(response.paymentReference)\n      }\n\n      // Set resources\n      cancel.setResources(response.resources)\n\n      // Set Processing\n      cancel.setProcessing(response.processing)\n\n      // Set Payload\n      cancel.setPayload(response)\n\n      // Resolve final result\n      resolve(cancel)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import Unzer from '../../Unzer'\nimport AbstractPayment from './AbstractPayment'\nimport { Customer } from '../Customer'\nimport Resources from './Resources'\nimport PaymentType from '../types/PaymentType'\nimport Cancel, { cancelChargeObject } from './Cancel'\nimport Processing from './Processing'\n\nexport default class Charge extends AbstractPayment {\n  private amount: string\n  private orderId: string\n  private currency: string\n  private returnUrl: string\n  private paymentReference: string\n  private card3ds: boolean\n  private resources: Resources\n  private cancelList: Array<Cancel>\n  private processing: Processing\n  private invoiceId: string\n\n  constructor(unzer: Unzer) {\n    super(unzer)\n    this.resources = new Resources()\n    this.processing = new Processing()\n  }\n  /**\n   * Set amount\n   *\n   * @param {string} amount\n   */\n  public setAmount(amount: string) {\n    this.amount = amount\n  }\n\n  /**\n   * Get amount\n   *\n   * @returns {string}\n   */\n  public getAmount(): string {\n    return this.amount\n  }\n\n  /**\n   * Get Order Id\n   *\n   * @returns {string}\n   */\n  public getOrderId(): string {\n    return this.orderId\n  }\n\n  /**\n   * Set Order Id\n   *\n   * @param {string} orderId\n   */\n  public setOrderId(orderId: string) {\n    this.orderId = orderId\n  }\n\n  /**\n   * Get Invoice Id\n   *\n   * @returns {string}\n   */\n  public getInvoiceId(): string {\n    return this.invoiceId\n  }\n\n  /**\n   * Set Invoice Id\n   *\n   * @param {string} invoiceId\n   */\n  public setInvoiceId(invoiceId: string) {\n    this.invoiceId = invoiceId\n  }\n\n  /**\n   * Set currency\n   *\n   * @param {string} currency\n   */\n  public setCurrency(currency: string) {\n    this.currency = currency\n  }\n\n  /**\n   * Get currency\n   *\n   * @returns\n   */\n  public getCurrency() {\n    return this.currency\n  }\n\n  /**\n   * Set return url\n   *\n   * @param {string} returnUrl\n   */\n  public setReturnUrl(returnUrl: string) {\n    this.returnUrl = returnUrl\n  }\n\n  /**\n   * Get return url\n   */\n  public getReturnUrl() {\n    return this.returnUrl\n  }\n\n  /**\n   * Set Payment Reference\n   *\n   * @param {string} paymentReference\n   */\n  public setPaymentReference(paymentReference: string) {\n    this.paymentReference = paymentReference\n  }\n\n  /**\n   * Get Payment Reference\n   *\n   * @returns\n   */\n  public getPaymentReference() {\n    return this.paymentReference\n  }\n\n  /**\n   * Set 3ds option\n   *\n   * @param {string} returnUrl\n   */\n  public setCard3ds(card3ds: boolean) {\n    this.card3ds = card3ds\n  }\n\n  /**\n   * Get 3ds option\n   */\n  public getCard3ds() {\n    return this.card3ds\n  }\n\n  /**\n   * Get resources\n   *\n   * @returns {Resources}\n   */\n  public getResources(): Resources {\n    return this.resources\n  }\n\n  /**\n   * Set resources\n   *\n   * @param {*} resources\n   */\n  public setResources(resources: any) {\n    this.resources\n      .setCustomerId(resources.customerId)\n      .setMetadataId(resources.metadataId)\n      .setPaymentId(resources.paymentId)\n      .setTypeId(resources.typeId)\n      .setBasketId(resources.basketId)\n      .setTraceId(resources.traceId)\n  }\n\n  /**\n   * Get Processing\n   *\n   * @returns {Processing}\n   */\n  public getProcessing(): Processing {\n    return this.processing\n  }\n\n  /**\n   * Set Processing\n   *\n   * @param {*} processing\n   */\n  public setProcessing(processing: any) {\n    this.processing\n      .setUniqueId(processing.uniqueId)\n      .setShortId(processing.shortId)\n  }\n\n  /**\n   * Get cancel transaction\n   *\n   * @param {string} cancelId\n   * @returns {Cancel}\n   */\n  public getCancel(cancelId: string): Cancel {\n    const cancelItem = this.getCancelList().find((item: Cancel) => item.getId() === cancelId) as Cancel\n\n    if (cancelItem && cancelItem.getId()) {\n      return cancelItem\n    }\n\n    throw new Error(`Cancel Id is not found in list of transaction`)\n  }\n\n  /**\n   * Get list of cancel transactions\n   *\n   * @returns {Array<Cancel>}\n   */\n  public getCancelList(): Array<Cancel> {\n    return this.cancelList\n  }\n\n  /**\n   * Set list of cancel transactions\n   *\n   * @param {Array<Cancel>} cancelList\n   */\n  public setCancelList(cancelList: Array<Cancel>) {\n    this.cancelList = cancelList\n  }\n\n  /**\n   * Refund (Cancel of charge)\n   *\n   * @param {number} [amount]\n   * @returns {Promise<Cancel>}\n   */\n  public cancel(amount?: number): Promise<Cancel> {\n    const cancelChargePayload: cancelChargeObject = {\n      chargeId: this.getId(),\n      paymentId: this.getResources().getPaymentId()\n    }\n\n    if (amount) {\n      cancelChargePayload.amount = amount\n    }\n\n    return this.getUnzer().cancelCharge(cancelChargePayload)\n  }\n}\n\nexport type chargeObject = {\n  amount: number\n  orderId?: string\n  invoiceId?: string\n  currency: string\n  returnUrl: string\n  paymentReference?: string\n  card3ds?: boolean\n  typeId: string | PaymentType\n  customerId?: string | Customer\n  metadataId?: string\n  basketId?: string\n}\n","import PaymentService from './PaymentService'\nimport Charge from '../payments/business/Charge';\n\nexport default (args: string, paymentService: PaymentService): Promise<Charge> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .get(args, paymentService.getUnzer().getPrivateKey(), true)\n\n      // New Charge with Hedeipay instance\n      let charge = new Charge(paymentService.getUnzer())\n\n      // Set charge Id\n      charge.setId(response.id)\n\n      // Set amount of charge\n      charge.setAmount(response.amount)\n\n      // Set order Id\n      if(response.orderId) {\n        charge.setOrderId(response.orderId)\n      }\n      \n      // Set payment reference\n      if(response.paymentReference) {\n        charge.setPaymentReference(response.paymentReference)\n      }\n\n      // Set currency\n      charge.setCurrency(response.currency)\n\n      // Set return URL\n      charge.setReturnUrl(response.returnUrl)\n\n      // Set resources\n      charge.setResources(response.resources)\n\n      // Set Processing\n      charge.setProcessing(response.processing)\n\n      // Set Payload\n      charge.setPayload(response)\n\n      // Resolve final result\n      resolve(charge)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import Unzer from '../../Unzer'\nimport AbstractPayment from './AbstractPayment'\nimport { Customer } from '../Customer'\nimport Charge from './Charge'\nimport Resources from './Resources'\nimport Cancel, { cancelAuthorizeObject } from './Cancel'\nimport PaymentType from '../types/PaymentType'\nimport Processing from './Processing';\nimport Basket from '../Basket'\n\nexport default class Authorization extends AbstractPayment {\n  private amount: string\n  private orderId: string\n  private currency: string\n  private returnUrl: string\n  private paymentReference: string\n  private zgReferenceId: string\n  private resources: Resources\n  private processing: Processing\n\n  constructor(unzer: Unzer) {\n    super(unzer)\n    this.resources = new Resources()\n    this.processing = new Processing()\n  }\n\n  /**\n   * Get Amount\n   *\n   * @returns {string}\n   */\n  public getAmount(): string {\n    return this.amount\n  }\n\n  /**\n   * Set Amount\n   *\n   * @param {string} amount\n   */\n  public setAmount(amount: string) {\n    this.amount = amount\n  }\n\n  /**\n   * Get Order OId\n   *\n   * @returns {string}\n   */\n  public getOrderId(): string {\n    return this.orderId\n  }\n\n  /**\n   * Set Amount\n   *\n   * @param {string} amount\n   */\n  public setOrderId(orderId: string) {\n    this.orderId = orderId\n  }\n\n  /**\n   * Set currency\n   *\n   * @param {string} currency\n   */\n  public setCurrency(currency: string) {\n    this.currency = currency\n  }\n\n  /**\n   * Get currency\n   *\n   * @returns\n   */\n  public getCurrency() {\n    return this.currency\n  }\n\n  /**\n   * Set return url\n   *\n   * @param {string} returnUrl\n   */\n  public setReturnUrl(returnUrl: string) {\n    this.returnUrl = returnUrl\n  }\n\n  /**\n   * Get return url\n   */\n  public getReturnUrl() {\n    return this.returnUrl\n  }\n\n  /**\n   * Set Zg Payment Reference Id\n   *\n   * @param {string} zgReferenceId\n   */\n  public setZgReferenceId(zgReferenceId: string) {\n    this.zgReferenceId = zgReferenceId\n  }\n\n  /**\n   * Get Zg Reference Id\n   *\n   * @returns\n   */\n  public getZgReferenceId() {\n    return this.zgReferenceId\n  }\n\n  /**\n   * Set Payment Reference\n   *\n   * @param {string} paymentReference\n   */\n  public setPaymentReference(paymentReference: string) {\n    this.paymentReference = paymentReference\n  }\n\n  /**\n   * Get Payment Reference\n   *\n   * @returns\n   */\n  public getPaymentReference() {\n    return this.paymentReference\n  }\n\n  /**\n   * Get resources\n   *\n   * @returns {Resources}\n   */\n  public getResources(): Resources {\n    return this.resources\n  }\n\n  /**\n   * Set resources\n   *\n   * @param {*} resources\n   */\n  public setResources(resources: any) {\n    this.resources\n      .setCustomerId(resources.customerId)\n      .setMetadataId(resources.metadataId)\n      .setPaymentId(resources.paymentId)\n      .setTypeId(resources.typeId)\n      .setTraceId(resources.traceId)\n  }\n\n  /**\n   * Get Processing\n   *\n   * @returns {Processing}\n   */\n  public getProcessing(): Processing {\n    return this.processing\n  }\n\n  /**\n   * Set Processing\n   *\n   * @param {*} processing\n   */\n  public setProcessing(processing: any) {\n    this.processing\n      .setUniqueId(processing.uniqueId)\n      .setShortId(processing.shortId)\n  }\n\n  /**\n   * Charge after authorize\n   *\n   * @param {number} [amount]\n   * @returns {Promise<Charge>}\n   */\n  public charge(amount?: number): Promise<Charge> {\n    const chargeAuthorizePayload: chargeAuthorizeObject = {\n      paymentId: this.getResources().getPaymentId()\n    }\n\n    if (amount) {\n      chargeAuthorizePayload.amount = amount\n    }\n\n    return this.getUnzer().chargeAuthorization(chargeAuthorizePayload)\n  }\n\n  /**\n   * Reversal (Cancel of authorization)\n   *\n   * @param {number} [amount]\n   * @returns {Promise<Cancel>}\n   */\n  public cancel(amount?: number): Promise<Cancel> {\n    const cancelAuthorizePayload: cancelAuthorizeObject = {\n      authorizationId: this.getId(),\n      paymentId: this.getResources().getPaymentId()\n    }\n\n    if (amount) {\n      cancelAuthorizePayload.amount = amount\n    }\n\n    return this.getUnzer().cancelAuthorization(cancelAuthorizePayload)\n  }\n}\n\nexport type authorizeObject = {\n  amount: number\n  orderId?: string\n  currency: string\n  typeId: string | PaymentType\n  returnUrl: string\n  paymentReference?: string\n  customerId?: string | Customer\n  metadataId?: string\n  basketId?: string | Basket,\n  effectiveInterestRate?: number\n}\n\nexport type chargeAuthorizeObject = {\n  paymentId: string\n  paymentReference?: string\n  amount?: number\n}\n","import PaymentService from './PaymentService'\nimport Authorization from '../payments/business/Authorization'\n\nexport default (args: string, paymentService: PaymentService): Promise<Authorization> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .get(args, paymentService.getUnzer().getPrivateKey(), true)\n\n      // New authorization with Hedeipay instance\n      let authorization = new Authorization(paymentService.getUnzer())\n\n      // Set authorization Id\n      authorization.setId(response.id)\n\n      // Set order Id\n      if(response.orderId) {\n        authorization.setOrderId(response.orderId)\n      }\n\n      // Set amount of authorization\n      authorization.setAmount(response.amount)\n\n      // Set currency\n      authorization.setCurrency(response.currency)\n\n      // Set return URL\n      authorization.setReturnUrl(response.returnUrl)\n\n      // Set payment Reference\n      authorization.setPaymentReference(response.paymentReference)\n\n      // Set zg payment reference Id\n      authorization.setZgReferenceId(response.zgReferenceId)\n\n      // Set resources\n      authorization.setResources(response.resources)\n\n      // Set Processing\n      authorization.setProcessing(response.processing)\n\n      // Set payload\n      authorization.setPayload(response)\n\n      // Resolve final result\n      resolve(authorization)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport Payment from '../payments/business/Payment'\nimport PaymentService from './PaymentService'\nimport Authorization from '../payments/business/Authorization'\nimport { getRefundIdOfCancel } from '../utils/Utils'\nimport FetchCancel from './FetchCancel'\nimport Charge from '../payments/business/Charge'\nimport Cancel from '../payments/business/Cancel'\nimport FetchCharge from './FetchCharge'\nimport FetchAuthorization from './FetchAuthorization';\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\n\nexport default (paymentId: string, paymentService: PaymentService): Promise<Payment> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .get(`${apiURL.URL_PAYMENT}/${paymentId}`, paymentService.getUnzer().getPrivateKey())\n\n      // Handle errors response\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // New Payment with Hedeipay instance\n      let payment = new Payment(paymentService.getUnzer())\n\n      // Set payment Id\n      payment.setId(response.id)\n\n      // Set resources\n      payment.setResources(response.resources)\n\n      // Fetch authorization transaction and set to payment object\n      const authorizeItem = await _fetchAuthorization(response.transactions, paymentService)\n      if(authorizeItem) {\n        payment.setAuthorization(authorizeItem)\n      }\n\n      // Fetch cancel list transaction and set to payment object\n      payment.setCancelList(await _fetchCancelList(payment, response.transactions, paymentService))\n\n      // Fetch charge list transaction and set to payment object\n      payment.setChargeList(await _fetchChargeList(payment, response.transactions, paymentService))\n\n      // Set Payload\n      payment.setPayload(response)\n\n      // Resolve final result\n      resolve(payment)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n\nconst _fetchAuthorization = (\n  transactions: any,\n  paymentService: PaymentService\n): Promise<Authorization | null> => {\n  return new Promise(async (resolve, reject) => {\n    // Find transaction authorize in list of transactions\n    const authorizeItem = transactions.find((item: any) => item.type === 'authorize')\n\n    if (typeof authorizeItem === 'undefined') {\n      resolve(null)\n      return // No authorize Item found\n    } else {\n      // Call Authorization service to fetch transaction\n      const authorization: Authorization = await FetchAuthorization(\n        authorizeItem.url,\n        paymentService\n      )\n\n      // Resolve final result\n      resolve(authorization)\n    }\n  })\n}\n\nconst _fetchChargeList = (\n  payment: Payment,\n  transactions: any,\n  paymentService: PaymentService,\n): Promise<Array<Charge>> => {\n  return new Promise(async resolve => {\n    // Find charge list in list of transactions\n    const chargeListItem = transactions.filter((item: any) => item.type === 'charge')\n    const chargeList: Array<Charge> = []\n    const cancelList: Array<Cancel> = payment.getCancelList()\n\n    const promiseCharge = chargeListItem.map(async (item: any) => {\n      // Call Charge service to fetch transaction\n      const charge: Charge = await FetchCharge(item.url, paymentService)\n\n      // Set payment object in cancel\n      charge.setPayment(payment)\n\n      // Set cancel list for charge object\n      charge.setCancelList(cancelList.filter((itemCancel: any) => itemCancel.getRefundId() === charge.getId()))\n\n      // Push charge instance to chargeList array\n      chargeList.push(charge)\n    })\n\n    // Await util charge service fetch done\n    await Promise.all(promiseCharge)\n\n    // Resolve final result\n    resolve(chargeList)\n  })\n}\n\nconst _fetchCancelList = (\n  payment: Payment,\n  transactions: any,\n  paymentService: PaymentService\n): Promise<Array<Cancel>> => {\n  return new Promise(async resolve => {\n    // Find charge list in list of transactions\n    const cancelListItem = transactions.filter(\n      (item: any) => item.type === 'cancel' || item.type === 'cancel-charge' || item.type === 'cancel-authorize'\n    )\n    const cancelList: Array<Cancel> = []\n\n    const promiseCancel = cancelListItem.map(async (item: any) => {\n      // Call Cancel service to fetch transaction\n      const cancel: Cancel = await FetchCancel(item.url, paymentService)\n\n      // Set payment object in cancel\n      cancel.setPayment(payment)\n\n      // Set refund Id of cancel\n      cancel.setRefundId(getRefundIdOfCancel(item.url))\n\n      // Push charge instance to cancelList array\n      cancelList.push(cancel)\n    })\n\n    // Await util charge service fetch done\n    await Promise.all(promiseCancel)\n\n    // Resolve final result\n    resolve(cancelList)\n  })\n}\n","import * as Utils from '../utils/Utils'\nimport PaymentType from '../payments/types/PaymentType'\nimport PaymentService from './PaymentService'\nimport AbstractPaymentType from '../payments/types/AbstractPaymentType'\n\nexport default (typeId: string, paymentService: PaymentService): Promise<PaymentType> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Parse paymentTypeId string to typeId and create a PaymentType\n      const paymentType: AbstractPaymentType = Utils.getPaymentTypeFromTypeId(typeId)\n\n      // Set Unzer instance\n      paymentType.setUnzer(paymentService.getUnzer())\n\n      // Parse URL with parameters\n      const requestUrl = `/types/${typeId}`\n\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .get(requestUrl, paymentService.getUnzer().getPrivateKey())\n\n      // Resolve final result\n      resolve(Utils.mapResponsePaymentType(response))  \n    } catch (error) {\n      // Reject with error object\n      reject(error)  \n    }\n  })\n}\n","import { Customer } from '../../payments/Customer'\n\nexport default (response: any, customer: Customer | undefined = undefined): Customer => {\n  // For create new customer\n  if (customer) {\n    const newCustomer = new Customer()\n      .setCustomerId(response.id)\n      .setFirstName(customer.getFirstName())\n      .setLastName(customer.getLastName())\n      .setSalutation(customer.getSalutation())\n      .setBirthDate(customer.getBirthDate())\n      .setEmail(customer.getEmail())\n      .setPhone(customer.getPhone())\n      .setMobile(customer.getMobile())\n      .setBillingAddress(customer.getBillingAddress())\n      .setShippingAddress(customer.getShippingAddress())\n      .setCompanyInfo(customer.getCompanyInfo())\n\n    return newCustomer\n  }\n\n  // For fetch or update customer\n  const newCustomer = new Customer()\n    .setCustomerId(response.id)\n    .setFirstName(response.firstname)\n    .setLastName(response.lastname)\n    .setSalutation(response.salutation)\n    .setBirthDate(response.birthDate)\n    .setEmail(response.email)\n    .setPhone(response.phone)\n    .setMobile(response.mobile)\n    .setBillingAddress(response.billingAddress)\n    .setShippingAddress(response.shippingAddress)\n    .setCompanyInfo(response.companyInfo)\n\n  return newCustomer\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport { Customer } from '../payments/Customer'\nimport ResponseCustomerMapper from './mappers/ResponseCustomerMapper'\n\nexport default (customer: Customer, paymentService: PaymentService): Promise<Customer> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .post(\n          apiURL.URL_CUSTOMER,\n          customer.getRequestPayload(),\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      // Mapper customer\n      const newCustomer = ResponseCustomerMapper(response, customer)\n\n      // Resolve final result\n      resolve(newCustomer)  \n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport { Customer } from '../payments/Customer'\nimport ResponseCustomerMapper from './mappers/ResponseCustomerMapper'\n\nexport default (customerId: string, customer: Customer, paymentService: PaymentService): Promise<Customer> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .put(\n          `${apiURL.URL_CUSTOMER}/${customerId}`,\n          customer.getRequestPayload(),\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      // Mapper customer\n      const newCustomer = ResponseCustomerMapper(response, customer)\n\n      // Resolve final result\n      resolve(newCustomer)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\n\nexport default (customerId: string, paymentService: PaymentService): Promise<boolean> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n      .getRequestAdapter()\n      .delete(\n        `${apiURL.URL_CUSTOMER}/${customerId}`, \n        {}, // send empty body when call delete customer\n        paymentService.getUnzer().getPrivateKey()\n      )\n      // Resolve final result\n      resolve(response)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport { Customer } from '../payments/Customer'\nimport ResponseCustomerMapper from './mappers/ResponseCustomerMapper'\n\nexport default (customerId: string, paymentService: PaymentService): Promise<Customer> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .get(\n          `${apiURL.URL_CUSTOMER}/${customerId}`, \n          paymentService.getUnzer().\n          getPrivateKey()\n        )\n\n      // Mapper customer\n      const newCustomer = ResponseCustomerMapper(response)\n\n      // Resolve final result\n      resolve(newCustomer)  \n    } catch (error) {\n      // Reject with error object\n      reject(error)  \n    }\n  })\n}\n","export default class Metadata{\n  private _id: string\n  private _metadata: Object\n\n  constructor() {}\n\n  /**\n   * Set Id\n   * @param {string} id\n   */\n  public setId(id: string): Metadata{\n    this._id = id\n    return this\n  }\n\n  /**\n   * Get Id\n   *\n   * @type {string}\n   */\n  public getId(): string {\n    return this._id\n  }\n\n  /**\n   * Set metadata value\n   *\n   * @param {object} value\n   * @returns {Metadata}\n   */\n  public setValue(value: object): Metadata {\n    this._metadata = value\n    return this\n  }\n\n  /**\n   * Get metadata value\n   *\n   * @type {object}\n   */\n  public getValue(): object {\n    return this._metadata\n  }\n\n  /**\n   * Get Request Payload\n   */\n  public getRequestPayload() {\n    return this._metadata\n  }\n}","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport Metadata from '../payments/Metadata'\n\nexport default (metadata: Metadata, paymentService: PaymentService): Promise<Metadata> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .post(\n          apiURL.URL_METADATA,\n          metadata.getRequestPayload(),\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      // Mapper metadata value\n      const newMetadata = new Metadata()\n      newMetadata.setId(response.id)\n\n      // Resolve final result\n      resolve(newMetadata)  \n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport Metadata from '../payments/Metadata'\n\nexport default (metadataId: string, paymentService: PaymentService): Promise<Metadata> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .get(\n          `${apiURL.URL_METADATA}/${metadataId}`, \n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      // Mapper metadata value\n      const newMetadata = new Metadata()\n      newMetadata.setValue(response)\n\n      // Resolve final result\n      resolve(newMetadata)  \n    } catch (error) {\n      // Reject with error object\n      reject(error)  \n    }\n  })\n}\n","class Basket {\n  private _id: string\n\tprivate _amountTotalGross: string\n  private _amountTotalDiscount: string  \n  private _amountTotalVat: string  \n  private _currencyCode: string\n  private _orderId: string\n  private _note: string\n  private _payload: object\n  private _basketItems: Array<basketItemObject>\n\n  constructor() {\n    this._basketItems = []\n  }\n\n  /**\n   * Set Id\n   * @param {string} id\n   */\n  public setId(id: string): Basket{\n    this._id = id\n    return this\n  }\n\n  /**\n   * Get Id\n   *\n   * @type {string}\n   */\n  public getId(): string {\n    return this._id\n  }\n\n  /**\n   * Set payload object\n   *\n   * @param {*} payload\n   * @returns\n   */\n  public setPayload(payload: any) {\n    return this._payload = payload\n  }\n  \n  /**\n   * Get payload object\n   *\n   * @returns {*}\n   */\n  public getPayload(): any {\n    return this._payload\n  }\n\n  /**\n   * Get Request Payload\n   */\n  public getRequestPayload() {\n    return {\n      amountTotalGross: this.getAmountTotalGross(),\n      amountTotalDiscount: this.getAmountTotalDiscount(),\n      amountTotalVat: this.getAmountTotalVat(),\n      currencyCode: this.getCurrencyCode(),\n      orderId: this.getOrderId(),\n      note: this.getNote(),\n      basketItems: this.getItems(),\n    }\n  }\n\n  /**\n   * Set amount total\n   * @param {string} value \n   * @returns {Basket}\n   */\n  public setAmountTotalGross(value: string): Basket {\n    this._amountTotalGross = value\n    return this\n  }\n\n  /**\n   * Get amount total\n   * @param {string} value \n   */\n  public getAmountTotalGross(): string{\n    return this._amountTotalGross\n  }\n\n  /**\n   * Set amount total discount\n   * @param {string} value \n   * @returns {Basket}\n   */\n  public setAmountTotalDiscount(value: string): Basket {\n    this._amountTotalDiscount = value\n    return this\n  }\n\n  /**\n   * Get amount total discount\n   * @param {string} value \n   */\n  public getAmountTotalDiscount(): string{\n    return this._amountTotalDiscount\n  }\n\n  /**\n   * Set amount total vat\n   * @param {string} value \n   * @returns {Basket}\n   */\n  public setAmountTotalVat(value: string): Basket {\n    this._amountTotalVat = value\n    return this\n  }\n\n  /**\n   * Get amount total vat\n   * @param {string} value \n   */\n  public getAmountTotalVat(): string {\n    return this._amountTotalVat\n  }\n\n  /**\n   * Set currency code\n   * @param {string} value \n   * @returns {Basket}\n   */\n  public setCurrencyCode(value: string): Basket {\n    this._currencyCode = value\n    return this\n  }\n\n  /**\n   * Get currency code\n   * @param {string} value \n   */\n  public getCurrencyCode(): string{\n    return this._currencyCode\n  }\n\n  /**\n   * Set order Id\n   * @param {string} value \n   * @returns {Basket}\n   */\n  public setOrderId(value: string): Basket {\n    this._orderId = value\n    return this\n  }\n\n  /**\n   * Get Order Id\n   * @param {string} value \n   */\n  public getOrderId(): string{\n    return this._orderId\n  }\n\n  /**\n   * Set basket note\n   * @param {string} value \n   * @returns {Basket}\n   */\n  public setNote(value: string): Basket {\n    this._note = value\n    return this\n  }\n\n  /**\n   * Get note for basket\n   * @param {string} value \n   */\n  public getNote(): string{\n    return this._note\n  }\n\n  /**\n   * Add basket Item\n   * @param {basketItemObject} item\n   */\n  public addItem(item: basketItemObject) {\n    this._basketItems.push(item)\n  }\n\n  /**\n   * Get basket Item\n   * @param {basketItemObject} item\n   * @returns {Array<basketItemObject>}\n   */\n  public getItems(): Array<basketItemObject> {\n    return this._basketItems\n  }\n}\n\nexport type basketItemObject = {\n  title: string,\n  basketItemReferenceId: string,\n  quantity: number,\n  amountPerUnit: string,\n  amountNet: string,\n  subTitle?: string,\n  unit?: string,\n  participantId?: string,\n  amountDiscount?: string,\n  vat?: string,\n  imageUrl?: string,\n  amountGross?: string,\n  amountVat?: string,\n  type?: string,\n}\n\nexport default Basket","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport Basket from '../payments/Basket'\n\nexport default (basket: Basket, paymentService: PaymentService): Promise<Basket> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .post(\n          apiURL.URL_BASKET,\n          basket.getRequestPayload(),\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      const newBasket = new Basket()\n      newBasket.setId(response.id)\n\n      // Resolve final result\n      resolve(newBasket)  \n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport Basket, {basketItemObject} from '../payments/Basket'\n\nexport default (basketId: string, paymentService: PaymentService): Promise<Basket> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .get(\n          `${apiURL.URL_BASKET}/${basketId}`, \n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      if(response.isError) {\n        reject(response.errors)\n        return\n      }\n\n      const newBasket = new Basket()\n      newBasket.setId(response.id)\n      \n      // Set amount total\n      newBasket.setAmountTotalGross(response.amountTotalGross)\n\n      // Set Amount total discount\n      newBasket.setAmountTotalDiscount(response.amountTotalDiscount)\n\n      // Set currency code\n      newBasket.setCurrencyCode(response.currencyCode)\n\n      // Set Order Id\n      newBasket.setOrderId(response.orderId)\n\n      // Set note\n      newBasket.setNote(response.note)\n\n      // Set baskset Items\n      if(response.basketItems) {\n        response.basketItems.map((item:basketItemObject) => newBasket.addItem(item))\n      }\n\n      // Set payload\n      newBasket.setPayload(response)\n\n      // Resolve final result\n      resolve(newBasket)  \n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport Basket from '../payments/Basket'\n\nexport default (basketId: string, basket: Basket, paymentService: PaymentService): Promise<Basket> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .put(\n          `${apiURL.URL_BASKET}/${basketId}`,\n          basket.getRequestPayload(), \n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      const newBasket = new Basket()\n      newBasket.setId(response.id)\n\n      // Resolve final result\n      resolve(newBasket)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import Resources from './Resources'\nimport Processing from './Processing'\n\nexport default class Recurring {\n  private _redirectUrl: string\n  private _returnUrl: string\n  private _date: string\n  private _resources: Resources\n  private _processing: Processing\n\n  constructor() {\n    this._resources = new Resources()\n    this._processing = new Processing()\n  }\n\n  /**\n   * Get redirectUrl\n   *\n   * @returns {string}\n   */\n  public getRedirectUrl(): string {\n    return this._redirectUrl\n  }\n\n  /**\n   * Set redirectUrl\n   *\n   * @param {string} redirectUrl\n   * @returns {Recurring}\n   */\n  public setRedirectUrl(redirectUrl: string): Recurring {\n    this._redirectUrl = redirectUrl\n    return this\n  }\n\n  /**\n   * Get returnUrl\n   *\n   * @returns {string}\n   */\n  public getReturnUrl(): string {\n    return this._returnUrl\n  }\n\n  /**\n   * Set returnUrl\n   *\n   * @param {string} returnUrl\n   * @returns {Recurring}\n   */\n  public setReturnUrl(returnUrl: string): Recurring {\n    this._returnUrl = returnUrl\n    return this\n  }\n\n  /**\n   * Get date\n   *\n   * @returns {string}\n   */\n  public getDate(): string {\n    return this._date\n  }\n\n  /**\n   * Set date\n   *\n   * @param {string} date\n   * @returns {Recurring}\n   */\n  public setDate(date: string): Recurring {\n    this._date = date\n    return this\n  }\n\n  /**\n   * Get resources\n   *\n   * @returns {Resources}\n   */\n  public getResources(): Resources {\n    return this._resources\n  }\n\n  /**\n   * Set resources\n   *\n   * @param {*} resources\n   */\n  public setResources(resources: any) {\n    this._resources\n      .setCustomerId(resources.customerId)\n      .setMetadataId(resources.metadataId)\n  }\n\n  /**\n   * Get Processing\n   *\n   * @returns {Processing}\n   */\n  public getProcessing(): Processing {\n    return this._processing\n  }\n\n  /**\n   * Set Processing\n   *\n   * @param {*} processing\n   */\n  public setProcessing(processing: any) {\n    this._processing\n      .setUniqueId(processing.uniqueId)\n      .setShortId(processing.shortId)\n  }\n}\n\nexport type recurringObject = {\n  returnUrl: string\n  customerId?: string\n  metadataId?: string\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport * as Utils from '../utils/Utils'\nimport PaymentService from './PaymentService'\nimport Recurring, { recurringObject } from '../payments/business/Recurring'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (typeId: string, args: recurringObject, paymentService: PaymentService): Promise<Recurring> => {\n  return new Promise(async (resolve, reject) => {\n    const { returnUrl, customerId, metadataId } = args\n\n    const payload: any = {\n      returnUrl: returnUrl,\n      resources: {}\n    }\n\n    if (customerId) {\n      payload.resources.customerId = customerId\n    }\n\n    if (metadataId) {\n      payload.resources.metadataId = metadataId\n    }\n\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .post(\n          Utils.replaceUrl(apiURL.URL_RECURRING, {\n            typeId,\n          }),\n          payload,\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      const newRecurring = new Recurring()\n\n      newRecurring.setReturnUrl(response.returnUrl) \n      newRecurring.setRedirectUrl(response.redirectUrl)\n      newRecurring.setProcessing(response.processing)\n      newRecurring.setResources(response.resources)\n\n      // Resolve final result\n      resolve(newRecurring)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport FetchPayment from './FetchPayment'\nimport Authorization, { authorizeObject } from '../payments/business/Authorization'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\n\nexport default (args: authorizeObject, paymentService: PaymentService): Promise<Authorization> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { \n        amount, orderId, currency, typeId, customerId, returnUrl,\n        paymentReference, metadataId, basketId, effectiveInterestRate\n      } = args\n      let payload: any = {\n        amount: amount,\n        currency: currency,\n        returnUrl: returnUrl,\n        resources: {\n          typeId: typeId\n        }\n      }\n\n      // Add payment reference into payload if its passed\n      if (paymentReference) {\n        payload.paymentReference = paymentReference\n      }\n\n      // Add order Id into payload if its passed\n      if (orderId) {\n        payload.orderId = orderId\n      }\n\n      if (effectiveInterestRate) {\n        payload.effectiveInterestRate = effectiveInterestRate\n      }\n\n      // Add customer Id into payload if its passed\n      if (customerId) {\n        payload.resources.customerId = customerId\n      }\n\n      // Add metadta Id into payload if its passed\n      if (metadataId) {\n        payload.resources.metadataId = metadataId\n      }\n\n      if (basketId) {\n        payload.resources.basketId = basketId\n      }\n\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .post(\n          apiURL.URL_PAYMENT_AUTHORIZE,\n          payload,\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // New Authorize with Hedeipay instance\n      let authorization = new Authorization(paymentService.getUnzer())\n\n      // Set authorization Id\n      authorization.setId(response.id)\n\n      // Set amount\n      authorization.setAmount(response.amount)\n\n      // Set order Id\n      if (response.orderId) {\n        authorization.setOrderId(response.orderId)\n      }\n\n      // Set currency\n      authorization.setCurrency(response.currency)\n\n      // Set return URL\n      authorization.setReturnUrl(response.returnUrl)\n\n      // Set payment reference\n      if (response.paymentReference) {\n        authorization.setPaymentReference(response.paymentReference)\n      }\n\n      // Set zg payment reference Id\n      if (response.zgReferenceId) {\n        authorization.setZgReferenceId(response.zgReferenceId)\n      }\n\n      // Set resources\n      authorization.setResources(response.resources)\n\n      // Set Processing\n      authorization.setProcessing(response.processing)\n\n      // Set payment object\n      authorization.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\n\n      // Set Payload\n      authorization.setPayload(response)\n\n      // Resolve final result\n      resolve(authorization)\n    } catch (error) {\n      // Reject with error object\n      return reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport Charge, { chargeObject } from '../payments/business/Charge'\nimport FetchPayment from './FetchPayment';\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (args: chargeObject, paymentService: PaymentService): Promise<Charge> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { amount, orderId, invoiceId, currency, returnUrl, paymentReference, customerId, typeId, metadataId, card3ds, basketId } = args\n      const payload: any = {\n        amount: amount,\n        currency: currency,\n        returnUrl: returnUrl,\n        resources: {\n          typeId: typeId,\n          basketId: basketId,\n        }\n      }\n\n      // Add payment reference into payload if its passed\n      if (paymentReference) {\n        payload.paymentReference = paymentReference\n      }\n\n      // Add order Id into payload if its passed\n      if (orderId) {\n        payload.orderId = orderId\n      }\n\n      // Add card3ds into payload it its passed\n      if(card3ds) {\n        payload.card3ds = card3ds\n      }\n\n      // Add customer Id into payload if its passed\n      if (customerId) {\n        payload.resources.customerId = customerId\n      }\n\n      // Add metadta Id into payload if its passed\n      if (metadataId) {\n        payload.resources.metadataId = metadataId\n      }\n\n      if (orderId) {\n        payload.orderId = orderId\n      }\n\n      if (invoiceId) {\n        payload.invoiceId = invoiceId\n      }\n\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .post(apiURL.URL_PAYMENT_CHARGE, payload, paymentService.getUnzer().getPrivateKey())\n\n      // Handle errors response        \n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // New Charge with Hedeipay instance\n      let charge = new Charge(paymentService.getUnzer())\n\n      // Set chargeId\n      charge.setId(response.id)\n\n      // Set amount\n      charge.setAmount(response.amount)\n\n      // Set order Id\n      if (response.orderId) {\n        charge.setOrderId(response.orderId)\n      }\n\n      // Set invoice Id\n      if (response.invoiceId) {\n        charge.setInvoiceId(response.invoiceId)\n      }\n\n      // Set currency\n      charge.setCurrency(response.currency)\n\n      // Set return URL\n      charge.setReturnUrl(response.returnUrl)\n\n      // Set 3ds option\n      charge.setCard3ds(response.card3ds)\n\n      // Set resources\n      charge.setResources(response.resources)\n\n      // Set Processing\n      charge.setProcessing(response.processing)\n\n      // Set payment object\n      charge.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\n\n      // Set Payload\n      charge.setPayload(response)\n\n      // Resolve final result\n      resolve(charge)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport * as Utils from '../utils/Utils'\nimport PaymentService from './PaymentService'\nimport Charge from '../payments/business/Charge'\nimport { chargeAuthorizeObject } from '../payments/business/Authorization'\nimport FetchPayment from './FetchPayment'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (args: chargeAuthorizeObject, paymentService: PaymentService): Promise<Charge> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let payload: any = {}\n      const {paymentId, amount, paymentReference} = args\n\n      if (amount) {\n        payload.amount = amount\n      }\n\n      // Add payment reference into payload if its passed\n      if(paymentReference) {\n        payload.paymentReference = paymentReference\n      }\n\n      // Call api end point to get response\n      const response: any = await paymentService\n      .getRequestAdapter()\n      .post(\n        Utils.replaceUrl(apiURL.URL_PAYMENT_CHARGE_AUTHORIZE, {\n          paymentId,\n        }),\n        payload,\n        paymentService.getUnzer().getPrivateKey()\n      )\n\n      // Handle errors response\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // New Charge with Hedeipay instance\n      let charge = new Charge(paymentService.getUnzer())\n\n      // Set charge Id\n      charge.setId(response.id)\n\n      // Set amount\n      charge.setAmount(response.amount)\n\n      // Set order Id\n      if(response.orderId) {\n        charge.setOrderId(response.orderId)\n      }\n\n      // Set payment reference\n      if(response.paymentReference) {\n        charge.setPaymentReference(response.paymentReference)\n      }\n\n      // Set resources\n      charge.setResources(response.resources)\n\n      // Set Processing\n      charge.setProcessing(response.processing)\n\n      // Set payment object\n      charge.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\n\n      // Set payload\n      charge.setPayload(response)\n\n      // Resolve final result\n      resolve(charge)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport * as Utils from '../utils/Utils'\nimport PaymentService from './PaymentService'\nimport Cancel, { cancelAuthorizeObject } from '../payments/business/Cancel'\nimport FetchPayment from './FetchPayment'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\n\nexport default (args: cancelAuthorizeObject, paymentService: PaymentService): Promise<Cancel> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let payload: any = {}\n      const {paymentId, authorizationId, amount, paymentReference} = args\n\n      // Add amount into payload if its passed\n      if (amount) {\n        payload.amount = amount\n      }\n\n      // Add payment reference into payload if its passed\n      if(paymentReference) {\n        payload.paymentReference = paymentReference\n      }\n\n      // Call api end point to get response\n      const response: any = await paymentService.getRequestAdapter().post(\n        Utils.replaceUrl(apiURL.URL_PAYMENT_AUTHORIZE_CANCEL, {\n          paymentId,\n          authorizationId,\n        }),\n        payload,\n        paymentService.getUnzer().getPrivateKey()\n      )\n\n      // Handle errors response        \n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // New Cancel with Hedeipay instance\n      let cancel = new Cancel(paymentService.getUnzer())\n\n      // Set cancel Id\n      cancel.setId(response.id)\n\n      // Set amount of cancel\n      cancel.setAmount(response.amount)\n\n      // Set order Id\n      if(response.orderId) {\n        cancel.setOrderId(response.orderId)\n      }\n\n      // Set payment reference\n      if(response.paymentReference) {\n        cancel.setPaymentReference(response.paymentReference)\n      }\n\n      // Set resources\n      cancel.setResources(response.resources)\n\n      // Set Processing\n      cancel.setProcessing(response.processing)\n\n      // Set payment object\n      cancel.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\n\n      // Set payload\n      cancel.setPayload(response)\n\n      // Resolve final result\n      resolve(cancel)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport * as Utils from '../utils/Utils'\nimport PaymentService from './PaymentService'\nimport Cancel, { cancelChargeObject } from '../payments/business/Cancel'\nimport FetchPayment from './FetchPayment'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\n\nexport default (args: cancelChargeObject, paymentService: PaymentService): Promise<Cancel> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let payload: any = {}\n      const {\n        paymentId, chargeId, amount, paymentReference,\n        amountGross, amountNet, amountVat,\n      } = args\n\n      // Add amount into payload if its passed\n      if (amount) {\n        payload.amount = amount\n      }\n\n      if (amountGross) {\n        payload.amountGross = amountGross\n      }\n\n      if (amountNet) {\n        payload.amountNet = amountNet\n      }\n\n      if (amountVat) {\n        payload.amountVat = amountVat\n      }\n\n      // Add payment reference into payload if its passed\n      if (paymentReference) {\n        payload.paymentReference = paymentReference\n      }\n\n      // Call api end point to get response\n      const response: any = await paymentService.getRequestAdapter().post(\n        Utils.replaceUrl(apiURL.URL_PAYMENT_CHARGE_CANCEL, {\n          paymentId,\n          chargeId,\n        }),\n        payload,\n        paymentService.getUnzer().getPrivateKey()\n      )\n\n      // Handle errors response        \n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // New Cancel with Hedeipay instance\n      let cancel = new Cancel(paymentService.getUnzer())\n\n      // Set cancel Id\n      cancel.setId(response.id)\n\n      // Set amount of cancel\n      cancel.setAmount(response.amount)\n\n      // Set order Id\n      if (response.orderId) {\n        cancel.setOrderId(response.orderId)\n      }\n\n      // Set payment reference\n      if (response.paymentReference) {\n        cancel.setPaymentReference(response.paymentReference)\n      }\n\n      // Set resources\n      cancel.setResources(response.resources)\n\n      // Set Processing\n      cancel.setProcessing(response.processing)\n\n      // Set payment object\n      cancel.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\n\n      // Set payload\n      cancel.setPayload(response)\n\n      // Resolve final result\n      resolve(cancel)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import AbstractPayment from \"./AbstractPayment\";\nimport Resources from \"./Resources\";\nimport Unzer from \"../../Unzer\";\nimport Processing from \"./Processing\";\n\nexport default class Shipment extends AbstractPayment {\n  private amount: string\n  private orderId: string\n  private invoiceId: string\n  private resources: Resources\n  private processing: Processing\n\n  constructor(unzer: Unzer) {\n    super(unzer)\n    this.resources = new Resources()\n    this.processing = new Processing()\n  }\n\n  /**\n   * Get Amount\n   *\n   * @returns {string}\n   */\n  public getAmount(): string {\n    return this.amount\n  }\n\n  /**\n   * Set Amount\n   *\n   * @param {string} amount\n   */\n  public setAmount(amount: string) {\n    this.amount = amount\n  }\n\n  /**\n   * Get Order Id\n   *\n   * @returns {string}\n   */\n  public getOrderId(): string {\n    return this.orderId\n  }\n\n  /**\n   * Set Order Id\n   *\n   * @param {string} orderId\n   */\n  public setOrderId(orderId: string) {\n    this.orderId = orderId\n  }\n\n  /**\n   * Get Invoice Id\n   *\n   * @returns {string}\n   */\n  public getInvoiceId(): string {\n    return this.invoiceId\n  }\n\n  /**\n   * Set Invoice Id\n   *\n   * @param {string} invoiceId\n   */\n  public setInvoiceId(invoiceId: string) {\n    this.invoiceId = invoiceId\n  }  \n\n  /**\n   * Get resources\n   *\n   * @returns {Resources}\n   */\n  public getResources(): Resources {\n    return this.resources\n  }\n\n  /**\n   * Set resources\n   *\n   * @param {*} resources\n   */\n  public setResources(resources: any) {\n    this.resources\n      .setCustomerId(resources.customerId)\n      .setMetadataId(resources.metadataId)\n      .setPaymentId(resources.paymentId)\n      .setTypeId(resources.typeId)\n      .setTraceId(resources.traceId)\n  }\n\n  /**\n   * Get Processing\n   *\n   * @returns {Processing}\n   */\n  public getProcessing(): Processing {\n    return this.processing\n  }\n\n  /**\n   * Set Processing\n   *\n   * @param {*} processing\n   */\n  public setProcessing(processing: any) {\n    this.processing\n      .setUniqueId(processing.uniqueId)\n      .setShortId(processing.shortId)\n  }\n}\n\nexport type shipmentObject = {\n  orderId?: string,\n  invoiceId?: string,\n}","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\nimport Shipment, { shipmentObject } from '../payments/business/Shipment';\nimport * as Utils from '../utils/Utils'\n\nexport default (paymentId: string, args: shipmentObject, paymentService: PaymentService): Promise<Shipment> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { orderId, invoiceId } = args\n      const payload: any = {}\n\n      if (orderId) {\n        payload.orderId = orderId\n      }\n\n      if (invoiceId) {\n        payload.invoiceId = invoiceId\n      }\n\n      // Call api end point to get response\n      const response: any = await paymentService.getRequestAdapter().post(\n        Utils.replaceUrl(apiURL.URL_PAYMENT_SHIPMENT, {\n          paymentId: paymentId,\n        }),\n        payload,\n        paymentService.getUnzer().getPrivateKey()\n      )\n\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // New Shipment with Hedeipay instance\n      let shipment = new Shipment(paymentService.getUnzer())\n\n      // Set shipment Id\n      shipment.setId(response.id)\n\n      // Set amount of charge\n      shipment.setAmount(response.amount)\n\n      // Set order Id\n      if (response.orderId) {\n        shipment.setOrderId(response.orderId)\n      }\n\n      // Set invoice Id\n      if (response.invoiceId) {\n        shipment.setInvoiceId(response.invoiceId)\n      }\n\n      // Set resources\n      shipment.setResources(response.resources)\n\n      // Set Processing\n      shipment.setProcessing(response.processing)\n\n      // Set Payload\n      shipment.setPayload(response)\n\n      // Resolve final result\n      resolve(shipment)\n    } catch (error) {\n      // Reject with error object\n      return reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport Paypage from '../payments/paypage/Paypage'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (paypage: Paypage, type: string, paymentService: PaymentService): Promise<Paypage> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Get payload\n      const payload = paypage.getPayload()\n\n      // Get additional attributes\n      const additionalAttributes: any = paypage.getAdditionalAttributes()\n      if (additionalAttributes && additionalAttributes.effectiveInterestRate) {\n        payload['additionalAttributes.effectiveInterestRate'] = additionalAttributes.effectiveInterestRate\n      }\n\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .post(\n          type === 'authorize' ? apiURL.URL_PAYPAGE_AUTHORIZE : apiURL.URL_PAYPAGE_CHARGE,\n          payload,\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      // Handle errors response    \n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // Set Unzer instance\n      paypage.setUnzer(paymentService.getUnzer())\n\n      // Set Payment Id\n      paypage.setId(response.id)\n\n      // Set Redirect URL\n      paypage.setRedirectUrl(response.redirectUrl)\n      \n      // Set action (AUTHORIZE|CHARGE)\n      paypage.setAction(response.action)\n\n      // Set resources\n      paypage.setResources(response.resources)\n\n      // Resolve final result\n      resolve(paypage)\n    } catch (error) {\n      // Reject with error object\n      return reject(error) \n    }\n  })\n}\n","import Linkpay from '../../payments/paypage/Linkpay'\n\nexport default (response: any, linkpay: Linkpay): Linkpay => {\n  \n  linkpay.setId(response.id)\n\n  linkpay\n    .setAlias(linkpay.getAlias())\n    .setAmount(response.amount || linkpay.getAmount())\n    .setAdditionalAttributes(response.additionalAttributes || linkpay.getAdditionalAttributes())\n    .setBillingAddressRequired(response.billingAddressRequired || linkpay.getBillingAddressRequired())\n    .setCurrency(response.currency || linkpay.getCurrency())\n    .setCard3ds(response.card3ds || linkpay.getCard3ds())\n    .setCss(response.css || linkpay.getCss())\n    .setContactUrl(response.contactUrl || linkpay.getContactUrl())\n    .setExcludeTypes(response.excludeTypes || linkpay.getExcludeTypes())\n    .setExpirationDate(response.expires || linkpay.getExpirationDate())\n    .setFullPageImage(response.fullPageImage || linkpay.getFullPageImage())\n    .setHelpUrl(response.helpUrl || linkpay.getHelpUrl())\n    .setInvoiceId(response.invoiceId || linkpay.getInvoiceId())\n    .setInvoiceIdRequired(response.invoiceIdRequired || linkpay.getInvoiceIdRequired())\n    .setImprintUrl(response.imprintUrl || linkpay.getImprintUrl())\n    .setIntention(response.intention || linkpay.getIntention())\n    .setLogoImage(response.logoImage || linkpay.getLogoImage())\n    .setPrivacyPolicyUrl(response.privacyPolicyUrl || linkpay.getPrivacyPolicyUrl())\n    .setOrderId(response.orderId || linkpay.getOrderId())\n    .setOrderIdRequired(response.orderIdRequired || linkpay.getOrderIdRequired())\n    .setResources(response.resources || linkpay.getResources())\n    .setReturnUrl(response.returnUrl || linkpay.getReturnUrl())\n    .setShopName(response.shopName || linkpay.getShopName())\n    .setShopDescription(response.shopDescription || linkpay.getShopDescription())\n    .setShippingAddressRequired(response.shippingAddressRequired || linkpay.getShippingAddressRequired())\n    .setTagline(response.tagline || linkpay.getTagline())\n    .setTermsAndConditionUrl(response.termsAndConditionUrl || linkpay.getTermsAndConditionUrl())\n    .setRedirectUrl(response.redirectUrl || linkpay.getRedirectUrl())\n    .setAction(response.action || linkpay.getAction())\n\n  return linkpay\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport Linkpay from '../payments/paypage/Linkpay'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\nimport ResponseLinkpayMapper from './mappers/ResponseLinkpayMapper'\n\nexport default (linkpay: Linkpay, type: string, paymentService: PaymentService): Promise<Linkpay> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .post(\n          type === 'authorize' ? apiURL.URL_LINKPAY_AUTHORIZE : apiURL.URL_LINKPAY_CHARGE,\n          linkpay.getPayload(),\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      // Handle errors response    \n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // Map returned values to new Linkpay instance\n      const newLinkpay: Linkpay = ResponseLinkpayMapper(response, linkpay)\n\n      // Set Unzer instance\n      newLinkpay.setUnzer(paymentService.getUnzer())\n\n      // Reset payload obj to empty obj\n      newLinkpay.resetPayload()\n\n      // Resolve final result\n      resolve(newLinkpay)\n    } catch (error) {\n      // Reject with error object\n      return reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport Linkpay from '../payments/paypage/Linkpay'\nimport ResponseLinkpayMapper from './mappers/ResponseLinkpayMapper'\n\nexport default (linkpayIdOrAlias: string, linkpay: Linkpay, paymentService: PaymentService): Promise<Linkpay> => {\n  return new Promise(async (resolve, reject) => {    \n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .put(\n          `${apiURL.URL_LINKPAY}/${linkpayIdOrAlias}`,\n          linkpay.getPayload(),\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      // Map returned values to new Linkpay instance\n      const updatedLinkpay: Linkpay = ResponseLinkpayMapper(response, linkpay)\n\n      // Set Unzer instance\n      updatedLinkpay.setUnzer(paymentService.getUnzer())\n\n      // Reset payload obj to empty obj\n      updatedLinkpay.resetPayload()\n\n      // Resolve final result\n      resolve(updatedLinkpay)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\n\nexport default (linkpayIdOrAlias: string, paymentService: PaymentService): Promise<boolean> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .delete(\n          `${apiURL.URL_LINKPAY}/${linkpayIdOrAlias}`,\n          {}, // send empty body when call delete method\n          paymentService.getUnzer().getPrivateKey()\n        )\n        \n      // Resolve final result\n      resolve(response)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import Unzer from '../../Unzer'\nimport AbstractPayment from './AbstractPayment'\nimport { Customer } from '../Customer'\nimport Resources from './Resources'\nimport PaymentType from '../types/PaymentType'\nimport Processing from './Processing'\n\nexport default class Payout extends AbstractPayment {\n  private amount: string\n  private orderId: string\n  private currency: string\n  private returnUrl: string\n  private paymentReference: string\n  private resources: Resources\n  private processing: Processing\n\n  constructor(unzer: Unzer) {\n    super(unzer)\n    this.resources = new Resources()\n    this.processing = new Processing()\n  }\n  /**\n   * Set amount\n   *\n   * @param {string} amount\n   */\n  public setAmount(amount: string) {\n    this.amount = amount\n  }\n\n  /**\n   * Get amount\n   *\n   * @returns {string}\n   */\n  public getAmount(): string {\n    return this.amount\n  }\n\n  /**\n   * Get Order OId\n   *\n   * @returns {string}\n   */\n  public getOrderId(): string {\n    return this.orderId\n  }\n\n  /**\n   * Set Amount\n   *\n   * @param {string} amount\n   */\n  public setOrderId(orderId: string) {\n    this.orderId = orderId\n  }\n\n  /**\n   * Set currency\n   *\n   * @param {string} currency\n   */\n  public setCurrency(currency: string) {\n    this.currency = currency\n  }\n\n  /**\n   * Get currency\n   *\n   * @returns\n   */\n  public getCurrency() {\n    return this.currency\n  }\n\n  /**\n   * Set Payment Reference\n   *\n   * @param {string} paymentReference\n   */\n  public setPaymentReference(paymentReference: string) {\n    this.paymentReference = paymentReference\n  }\n\n  /**\n   * Get Payment Reference\n   *\n   * @returns\n   */\n  public getPaymentReference() {\n    return this.paymentReference\n  }\n\n  /**\n   * Set return url\n   *\n   * @param {string} returnUrl\n   */\n  public setReturnUrl(returnUrl: string) {\n    this.returnUrl = returnUrl\n  }\n\n  /**\n   * Get return url\n   */\n  public getReturnUrl() {\n    return this.returnUrl\n  }\n\n  /**\n   * Get resources\n   *\n   * @returns {Resources}\n   */\n  public getResources(): Resources {\n    return this.resources\n  }\n\n  /**\n   * Set resources\n   *\n   * @param {*} resources\n   */\n  public setResources(resources: any) {\n    this.resources\n      .setCustomerId(resources.customerId)\n      .setMetadataId(resources.metadataId)\n      .setPaymentId(resources.paymentId)\n      .setTypeId(resources.typeId)\n      .setTraceId(resources.traceId)\n  }\n\n  /**\n   * Get Processing\n   *\n   * @returns {Processing}\n   */\n  public getProcessing(): Processing {\n    return this.processing\n  }\n\n  /**\n   * Set Processing\n   *\n   * @param {*} processing\n   */\n  public setProcessing(processing: any) {\n    this.processing\n      .setUniqueId(processing.uniqueId)\n      .setShortId(processing.shortId)\n  }\n}\n\nexport type payoutObject = {\n  amount: number\n  orderId?: string\n  currency: string\n  returnUrl: string\n  typeId: string | PaymentType\n  paymentReference?: string\n  customerId?: string | Customer\n  metadataId?: string\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport FetchPayment from './FetchPayment'\nimport Payout, { payoutObject } from '../payments/business/Payout'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (args: payoutObject, paymentService: PaymentService): Promise<Payout> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { amount, orderId, paymentReference, currency, typeId, customerId, returnUrl, metadataId } = args\n      let payload: any = {\n        amount: amount,\n        currency: currency,\n        returnUrl: returnUrl,\n        resources: {\n          typeId: typeId\n        }\n      }\n\n      // Add order Id into payload if its passed\n      if (orderId) {\n        payload.orderId = orderId\n      }\n\n      // Add payment reference into payload if its passed\n      if (paymentReference) {\n        payload.paymentReference = paymentReference\n      }\n\n      // Add customer Id into payload if its passed\n      if (customerId) {\n        payload.resources.customerId = customerId\n      }\n\n      // Add metadta Id into payload if its passed\n      if (metadataId) {\n        payload.resources.metadataId = metadataId\n      }\n\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .post(\n          apiURL.URL_PAYMENT_PAYOUT,\n          payload,\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // New Authorize with Hedeipay instance\n      let payout = new Payout(paymentService.getUnzer())\n\n      // Set payout Id\n      payout.setId(response.id)\n\n      // Set amount\n      payout.setAmount(response.amount)\n\n      // Set order Id\n      if(response.orderId) {\n        payout.setOrderId(response.orderId)\n      }\n\n      // Set payment reference\n      if(response.paymentReference) {\n        payout.setPaymentReference(response.paymentReference)\n      }\n\n      // Set currency\n      payout.setCurrency(response.currency)\n\n      // Set return URL\n      payout.setReturnUrl(response.returnUrl)\n\n      // Set resources\n      payout.setResources(response.resources)\n\n      // Set payment object\n      payout.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\n\n      // Set Payload\n      payout.setPayload(response)\n\n      // Resolve final result\n      resolve(payout)\n    } catch (error) {\n      // Reject with error object\n      return reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport Payout from '../payments/business/Payout'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\n\nexport default (paymentId: string, payoutId: string, paymentService: PaymentService): Promise<Payout> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .get(`${apiURL.URL_PAYMENT}/${paymentId}/payouts/${payoutId}`, paymentService.getUnzer().getPrivateKey())\n\n      // Handle errors response\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      // New payout with Hedeipay instance\n      let payout = new Payout(paymentService.getUnzer())\n\n      // Set payout Id\n      payout.setId(response.id)\n\n      // Set order Id\n      if(response.orderId) {\n        payout.setOrderId(response.orderId)\n      }\n\n      // Set payment reference\n      if(response.paymentReference) {\n        payout.setPaymentReference(response.paymentReference)\n      }\n\n      // Set amount of payout\n      payout.setAmount(response.amount)\n\n      // Set currency\n      payout.setCurrency(response.currency)\n\n      // Set return URL\n      payout.setReturnUrl(response.returnUrl)\n\n      // Set resources\n      payout.setResources(response.resources)\n\n      // Set Processing\n      payout.setProcessing(response.processing)\n\n      // Set payload\n      payout.setPayload(response)\n\n      // Resolve final result\n      resolve(payout)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../../configs/ApiUrls'\nimport AbstractPaymentType from './AbstractPaymentType'\nimport PaymentType from './PaymentType'\n\nexport default class InstallmentSecuredPlan extends AbstractPaymentType implements PaymentType {\n  private _numberOfRates: number\n  private _dayOfPurchase: string\n  private _orderDate: string\n  private _totalPurchaseAmount: number\n  private _totalInterestAmount: number\n  private _totalAmount: number\n  private _effectiveInterestRate: number\n  private _nominalInterestRate: number\n  private _feeFirstRate: number\n  private _feePerRate: number\n  private _monthlyRate: number\n  private _lastRate: number\n\n  constructor() {\n    super()\n  }\n\n  /**\n   * Set Number of Rate\n   *\n   * @param {string} numberOfRates\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setNumberOfRates(numberOfRates: number): InstallmentSecuredPlan {\n    this._numberOfRates = numberOfRates\n    return this\n  }\n\n  /**\n   * Get Number of Rate\n   *\n   * @returns {string}\n   */\n  public getNumberOfRates(): number {\n    return this._numberOfRates\n  }\n\n  /**\n   * Set Day of purchase\n   *\n   * @param {string} dayOfPurchase\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setDayOfPurchase(dayOfPurchase: string): InstallmentSecuredPlan {\n    this._dayOfPurchase = dayOfPurchase\n    return this\n  }\n\n  /**\n   * Get Day of Purchase\n   *\n   * @returns {string}\n   */\n  public getDayOfPurchase(): string {\n    return this._dayOfPurchase\n  }\n\n  /**\n   * Set Order Date\n   *\n   * @param {string} orderDate\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setOrderDate(orderDate: string): InstallmentSecuredPlan {\n    this._orderDate = orderDate\n    return this\n  }\n\n  /**\n   * Get Order Date\n   *\n   * @returns {string}\n   */\n  public getOrderDate(): string {\n    return this._orderDate\n  }\n\n  /**\n   * Set Total Purchase Amount\n   *\n   * @param {number} totalPurchaseAmount\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setTotalPurchaseAmount(totalPurchaseAmount: number): InstallmentSecuredPlan {\n    this._totalPurchaseAmount = totalPurchaseAmount\n    return this\n  }\n\n  /**\n   * Get Total Purchase Amount\n   *\n   * @returns {number}\n   */\n  public getTotalPurchaseAmount(): number {\n    return this._totalPurchaseAmount\n  }\n\n  /**\n   * Set Interest Amount\n   *\n   * @param {number} totalInterestAmount\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setTotalInterestAmount(totalInterestAmount: number): InstallmentSecuredPlan {\n    this._totalInterestAmount = totalInterestAmount\n    return this\n  }\n\n  /**\n   * Get Interest Amount\n   *\n   * @returns {number}\n   */\n  public getTotalInterestAmount(): number {\n    return this._totalInterestAmount\n  }\n\n  /**\n   * Set Total Amount\n   *\n   * @param {number} totalAmount\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setTotalAmount(totalAmount: number): InstallmentSecuredPlan {\n    this._totalAmount = totalAmount\n    return this\n  }\n\n  /**\n   * Get Total Amount\n   *\n   * @returns {number}\n   */\n  public getTotalAmount(): number {\n    return this._totalAmount\n  }\n\n  /**\n   * Set Effective Interest Rate\n   *\n   * @param {number} effectiveInterestRate\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setEffectiveInterestRate(effectiveInterestRate: number): InstallmentSecuredPlan {\n    this._effectiveInterestRate = effectiveInterestRate\n    return this\n  }\n\n  /**\n   * Get Total Amount\n   *\n   * @returns {number}\n   */\n  public getEffectiveInterestRate(): number {\n    return this._effectiveInterestRate\n  }\n\n  /**\n   * Set Nominal Interest Rate\n   *\n   * @param {number} nominalInterestRate\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setNominalInterestRate(nominalInterestRate: number): InstallmentSecuredPlan {\n    this._nominalInterestRate = nominalInterestRate\n    return this\n  }\n\n  /**\n   * Get Nominal Interest Rate\n   *\n   * @returns {number}\n   */\n  public getNominalInterestRate(): number {\n    return this._nominalInterestRate\n  }\n\n  /**\n   * Set Fee First Rate\n   *\n   * @param {number} feeFirstRate\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setFeeFirstRate(feeFirstRate: number): InstallmentSecuredPlan {\n    this._feeFirstRate = feeFirstRate\n    return this\n  }\n\n  /**\n   * Get Nominal Interest Rate\n   *\n   * @returns {number}\n   */\n  public getFeeFirstRate(): number {\n    return this._feeFirstRate\n  }\n\n  /**\n   * Set Fee Per Rate\n   *\n   * @param {number} feePerRate\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setFeePerRate(feePerRate: number): InstallmentSecuredPlan {\n    this._feePerRate = feePerRate\n    return this\n  }\n\n  /**\n   * Get Nominal Interest Rate\n   *\n   * @returns {number}\n   */\n  public getFeePerRate(): number {\n    return this._feePerRate\n  }\n\n  /**\n   * Set Monthly Rate\n   *\n   * @param {number} monthlyRate\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setMonthlyRate(monthlyRate: number): InstallmentSecuredPlan {\n    this._monthlyRate = monthlyRate\n    return this\n  }\n\n  /**\n   * Get Monthly Rate\n   *\n   * @returns {number}\n   */\n  public getMonthlyRate(): number {\n    return this._monthlyRate\n  }\n\n  /**\n   * Set Last Rate\n   *\n   * @param {number} lastRate\n   * @returns {InstallmentSecuredPlan}\n   */\n  public setLastRate(lastRate: number): InstallmentSecuredPlan {\n    this._lastRate = lastRate\n    return this\n  }\n\n  /**\n   * Get Monthly Rate\n   *\n   * @returns {number}\n   */\n  public getLastRate(): number {\n    return this._lastRate\n  }\n  \n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return apiURL.URL_TYPE_INSTALLMENT_SECURED_PLANS\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns {*}\n   */\n  public getPayload(): any {\n    return {}\n  }\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport InstallmentSecuredPlan from '../payments/types/InstallmentSecuredPlan'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (amount: string, currency: string, effectiveInterestRate: string, orderDate: string, paymentService: PaymentService): Promise<Array<InstallmentSecuredPlan>> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .get(\n          `${apiURL.URL_TYPE_INSTALLMENT_SECURED_PLANS}/?amount=${amount}&currency=${currency}&effectiveInterest=${effectiveInterestRate}&orderDate=${orderDate}`, \n          paymentService.getUnzer().getPrivateKey()\n        )\n        \n      // Handle errors response\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      const installmentSecuredPlansList: Array<InstallmentSecuredPlan> = []\n\n      response.entity.map((item:any) => {\n        // Create new instance Unzer\n        const installmentSecuredPlan = new InstallmentSecuredPlan()  \n\n        // Set values foreach property\n        installmentSecuredPlan.setNumberOfRates(item.numberOfRates)\n        installmentSecuredPlan.setDayOfPurchase(item.dayOfPurchase)\n        installmentSecuredPlan.setOrderDate(item.orderDate)\n        installmentSecuredPlan.setTotalPurchaseAmount(item.totalPurchaseAmount)\n        installmentSecuredPlan.setTotalInterestAmount(item.totalInterestAmount)\n        installmentSecuredPlan.setTotalAmount(item.totalAmount)\n        installmentSecuredPlan.setEffectiveInterestRate(item.effectiveInterestRate)\n        installmentSecuredPlan.setNominalInterestRate(item.nominalInterestRate)\n        installmentSecuredPlan.setFeeFirstRate(item.feeFirstRate)\n        installmentSecuredPlan.setFeePerRate(item.feePerRate)\n        installmentSecuredPlan.setMonthlyRate(item.monthlyRate)\n        installmentSecuredPlan.setLastRate(item.lastRate)\n\n        // Add installmentSecured item to plan list\n        installmentSecuredPlansList.push(installmentSecuredPlan)\n      })\n\n      // Resolve final result\n      resolve(installmentSecuredPlansList)\n    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}\n","import * as apiURL from '../configs/ApiUrls'\nimport PaymentService from './PaymentService'\nimport InstallmentSecured, { updateInstallmentSecuredObject} from '../payments/types/InstallmentSecured'\n\nexport default (installmentSecuredId: string, args: updateInstallmentSecuredObject, paymentService: PaymentService): Promise<InstallmentSecured> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // Call api end point to get response\n      let payload: any = {}\n      const { iban, bic, accountHolder, invoiceDate, invoiceDueDate } = args\n\n      if (iban) {\n        payload.iban = iban\n      }\n\n      if (bic) {\n        payload.bic = bic\n      }\n\n      if (accountHolder) {\n        payload.accountHolder = accountHolder\n      }\n\n      if (invoiceDate) {\n        payload.invoiceDate = invoiceDate\n      }\n\n      if (invoiceDueDate) {\n        payload.invoiceDueDate = invoiceDueDate\n      }\n\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .put(\n          `${apiURL.URL_TYPE_INSTALLMENT_SECURED}/${installmentSecuredId}`,\n          payload,\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      const installmentSecured = new InstallmentSecured()\n\n      installmentSecured.setIban(response.iban)\n      installmentSecured.setBic(response.bic)\n      installmentSecured.setAccountHolder(response.accountHolder)\n      installmentSecured.setInvoiceDate(response.invoiceDate)\n      installmentSecured.setInvoiceDueDate(response.invoiceDueDate)\n      installmentSecured.setNumberOfRates(response.numberOfRates)\n      installmentSecured.setDayOfPurchase(response.dayOfPurchase)\n      installmentSecured.setOrderDate(response.orderDate)\n      installmentSecured.setTotalPurchaseAmount(response.totalPurchaseAmount)\n      installmentSecured.setTotalInterestAmount(response.totalInterestAmount)\n      installmentSecured.setTotalAmount(response.totalAmount)\n      installmentSecured.setEffectiveInterestRate(response.effectiveInterestRate)\n      installmentSecured.setNominalInterestRate(response.nominalInterestRate)\n      installmentSecured.setFeeFirstRate(response.feeFirstRate)\n      installmentSecured.setFeePerRate(response.feePerRate)\n      installmentSecured.setMonthlyRate(response.monthlyRate)\n      installmentSecured.setLastRate(response.lastRate)\n\n      // Resolve final result\n      resolve(installmentSecured)    } catch (error) {\n      // Reject with error object\n      reject(error)\n    }\n  })\n}","import AbstractPayment from './AbstractPayment'\nimport Unzer from '../../Unzer'\nimport Resources from './Resources'\n\nexport default class Webhook extends AbstractPayment  {\n  private url: string\n  private event: string\n  private eventList: Array<any>\n  private resources: Resources\n\n  constructor(unzer: Unzer) {\n    super(unzer)\n    this.resources = new Resources()\n  }\n\n  /**\n   * Get Url\n   *\n   * @returns {string}\n   */\n  public getUrl(): string {\n    return this.url\n  }\n\n  /**\n   * Set Url\n   *\n   * @param {string} url\n   */\n  public setUrl(url: string) {\n    this.url = url\n  }\n\n  /**\n   * Get Event\n   *\n   * @returns {string}\n   */\n  public getEvent(): string {\n    return this.event\n  }\n\n  /**\n   * Set Event\n   *\n   * @param {string} event\n   */\n  public setEvent(event: string) {\n    this.event = event\n  }\n\n  /**\n   * Get EventList\n   *\n   * @returns {Array<any>}\n   */\n  public getEventList(): Array<any> {\n    return this.eventList\n  }\n\n  /**\n   * Set Event\n   *\n   * @param {Array<string>} eventList\n   */\n  public setEventList(eventList: Array<any>) {\n    this.eventList = eventList\n  }\n\n  /**\n   * Get resources\n   *\n   * @returns {Resources}\n   */\n  public getResources(): Resources {\n    return this.resources\n  }\n\n  /**\n   * Get id by event name\n   *\n   * @param {string} event\n   * @returns {string}\n   */\n  public getIdByEventName(event: string): string {\n    if (this.eventList.length === 0) {\n      return 'Event list does not exist'\n    }\n    const filteredEvent = this.eventList.filter(listEvent => listEvent.event === event)\n     if (filteredEvent.length === 0) {\n      return 'Passed event has not been registered'\n    }\n    return filteredEvent[0].id\n  }\n\n  /**\n   * Get url by event name\n   *\n   * @param {string} event\n   * @returns {string}\n   */\n  public getUrlByEventName(event: string): string {\n    if (this.eventList.length === 0) {\n      return 'Event list does not exist'\n    }\n    const filteredEvent = this.eventList.filter(listEvent => listEvent.event === event)\n    if (filteredEvent.length === 0) {\n      return 'Passed event has not been registered'\n    }\n    return filteredEvent[0].url\n  }\n}\n\nexport type webhookObject = {\n  url: string\n  event?: string\n  eventList?: Array<string>\n}","import PaymentService from './PaymentService'\nimport * as apiURL from '../configs/ApiUrls'\nimport Webhook, { webhookObject } from '../payments/business/Webhook'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (args: webhookObject, paymentService: PaymentService): Promise<Webhook> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { url, event, eventList } = args\n      let payload: any = {url}\n\n      if (event) {\n        payload.event = event\n      }\n\n      if (eventList) {\n        payload.eventList = eventList\n      }\n\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .post(\n          apiURL.URL_WEBHOOK,\n          payload,\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      let webhook = new Webhook(paymentService.getUnzer())\n\n      if (response.events) {\n        webhook.setEventList(response.events)\n      } else {\n        webhook.setUrl(response.url)\n        webhook.setEvent(response.event)\n        webhook.setId(response.id)\n      }\n      \n      resolve(webhook)\n\n    } catch (error) {\n      return reject(error)\n    }\n  })\n}","import PaymentService from './PaymentService'\nimport * as apiURL from '../configs/ApiUrls'\nimport Webhook, { webhookObject } from '../payments/business/Webhook'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (paymentService: PaymentService, webhookId?: string): Promise<Webhook> => {\n  return new Promise(async (resolve, reject) => {\n    const endpoint = webhookId ? `${apiURL.URL_WEBHOOK}/${webhookId}` : apiURL.URL_WEBHOOK\n    try {\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .get(\n          endpoint,\n          paymentService.getUnzer().getPrivateKey()\n          )\n      \n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      let webhook = new Webhook(paymentService.getUnzer())\n\n      if (response.events) {\n        webhook.setEventList(response.events)\n      } else {\n        webhook.setUrl(response.url)\n        webhook.setEvent(response.event)\n        webhook.setId(response.id)\n      }\n\n      resolve(webhook)\n    } catch (error) {\n      reject(error)\n    }\n  })\n}","import PaymentService from './PaymentService'\nimport * as apiURL from '../configs/ApiUrls'\nimport Webhook from '../payments/business/Webhook'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (webhookId: string, args: any, paymentService: PaymentService): Promise<Webhook> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { url } = args\n      let payload: any = {}\n\n      if (url) {\n        payload.url = url\n      }\n\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .put(\n          `${apiURL.URL_WEBHOOK}/${webhookId}`,\n          payload,\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n\n      let webhook = new Webhook(paymentService.getUnzer())\n      webhook.setUrl(response.url)\n      webhook.setEvent(response.event)\n      webhook.setId(response.id)\n\n      resolve(webhook)\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n","import PaymentService from './PaymentService'\nimport * as apiURL from '../configs/ApiUrls'\nimport Webhook from '../payments/business/Webhook'\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\n\nexport default (paymentService: PaymentService, webhookId?: string): Promise<Webhook> => {\n  return new Promise(async (resolve, reject) => {\n    const endpoint = webhookId ? `${apiURL.URL_WEBHOOK}/${webhookId}` : apiURL.URL_WEBHOOK\n    try {\n      const response: any = await paymentService\n        .getRequestAdapter()\n        .delete(\n          endpoint,\n          {},\n          paymentService.getUnzer().getPrivateKey()\n        )\n\n      if (response.errors) {\n        return reject(ResponseErrorsMapper(response))\n      }\n      \n      if (response.events) {\n        resolve(response.events)\n      } else {\n        resolve(response.id)\n      }\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n","import { FetchAdapter } from '../adapters/FetchAdapter'\nimport Unzer from '../Unzer'\nimport PaymentType from '../payments/types/PaymentType'\nimport { Customer } from '../payments/Customer'\nimport Metadata from '../payments/Metadata'\nimport Basket from '../payments/Basket'\nimport Authorization, { authorizeObject, chargeAuthorizeObject } from '../payments/business/Authorization'\nimport Cancel, { cancelAuthorizeObject, cancelChargeObject } from '../payments/business/Cancel'\nimport Charge, { chargeObject } from '../payments/business/Charge'\nimport Paypage from '../payments/paypage/Paypage'\nimport Linkpay from '../payments/paypage/Linkpay'\nimport Payment from '../payments/business/Payment'\nimport CreatePaymentType from './CreatePaymentType'\nimport FetchPayment from './FetchPayment'\nimport FetchPaymentType from './FetchPaymentType'\nimport CreateCustomer from './CreateCustomer'\nimport UpdateCustomer from './UpdateCustomer'\nimport DeleteCustomer from './DeleteCustomer'\nimport FetchCustomer from './FetchCustomer'\nimport CreateMetadata from './CreateMetadata'\nimport FetchMetadata from './FetchMetadata'\nimport CreateBasket from './CreateBasket'\nimport FetchBasket from './FetchBasket'\nimport UpdateBasket from './UpdateBasket'\nimport CreateRecurring from './CreateRecurring'\nimport AuthorizationService from './Authorization'\nimport ChargeService from './Charge'\nimport ChargeAuthorization from './ChargeAuthorization'\nimport CancelAuthorization from './CancelAuthorization'\nimport CancelCharge from './CancelCharge'\nimport AbstractPaymentType from '../payments/types/AbstractPaymentType'\nimport Shipment, { shipmentObject } from '../payments/business/Shipment'\nimport ShipmentService from './Shipment'\nimport InitPaypage from './InitPaypage'\nimport InitLinkpay from './InitLinkpay'\nimport UpdateLinkpay from './UpdateLinkpay'\nimport DeleteLinkpay from './DeleteLinkpay'\nimport PayoutService from './Payout'\nimport Payout, { payoutObject } from '../payments/business/Payout'\nimport Recurring, { recurringObject } from '../payments/business/Recurring'\nimport FetchPayout from './FetchPayout'\nimport InstallmentSecured, { updateInstallmentSecuredObject } from '../payments/types/InstallmentSecured'\nimport FetchInstallmentSecuredPlan from './FetchInstallmentSecuredPlan'\nimport UpdateInstallmentSecured from './UpdateInstallmentSecured'\nimport Webhook, { webhookObject } from '../payments/business/Webhook'\nimport RegisterWebhook from './RegisterWebhook'\nimport FetchWebhook from './FetchWebhook'\nimport UpdateWebhook from './UpdateWebhook'\nimport DeleteWebhook from './DeleteWebhook'\nimport InstallmentSecuredPlan from '../payments/types/InstallmentSecuredPlan'\n\nexport default class PaymentService {\n  private requestAdapter: FetchAdapter\n  private unzer: Unzer\n\n  constructor(unzer: Unzer, locale?: string, env?: string) {\n    this.unzer = unzer\n    this.requestAdapter = new FetchAdapter(locale, env)\n  }\n\n  /**\n   * Get Unzer instance\n   *\n   * @returns {Unzer}\n   */\n  public getUnzer(): Unzer {\n    return this.unzer\n  }\n\n  /**\n   * Get request adapter\n   *\n   * @returns {FetchAdapter}\n   */\n  public getRequestAdapter(): FetchAdapter {\n    return this.requestAdapter\n  }\n\n  /**\n   * Create payment type\n   *\n   * @param {PaymentType} paymentType\n   * @returns {Promise<PaymentType>}\n   */\n  public createPaymentType(paymentType: AbstractPaymentType): Promise<PaymentType> {\n    return CreatePaymentType(paymentType, this)\n  }\n\n  /**\n   * Fetch a payment\n   *\n   * @param {string} paymentId\n   * @returns {Promise<Payment>}\n   */\n  public fetchPayment(paymentId: string): Promise<Payment> {\n    return FetchPayment(paymentId, this)\n  }\n\n  /**\n   * Fetch a payment type\n   *\n   * @param {string} paymentTypeId\n   * @returns {Promise<PaymentType>}\n   */\n  public fetchPaymentType(paymentTypeId: string): Promise<PaymentType> {\n    return FetchPaymentType(paymentTypeId, this)\n  }\n\n  /**\n   * Create customer\n   *\n   * @param {Customer} customer\n   * @returns {Promise<Customer>}\n   */\n  public createCustomer(customer: Customer): Promise<Customer> {\n    return CreateCustomer(customer, this)\n  }\n\n  /**\n   * Fetch customer info by customer Id\n   *\n   * @param {string} customerId\n   * @returns {Promise<Customer>}\n   */\n  public fetchCustomer(customerId: string): Promise<Customer> {\n    return FetchCustomer(customerId, this)\n  }\n\n  /**\n   * Update data customer\n   *\n   * @param {string} customerId\n   * @param {Customer} customer\n   * @returns {Promise<Customer>}\n   */\n  public updateCustomer(customerId: string, customer: Customer): Promise<Customer> {\n    return UpdateCustomer(customerId, customer, this)\n  }\n\n  /**\n   * Delete a customer\n   *\n   * @param {string} customerId\n   * @returns {Promise<boolean>}\n   */\n  public deleteCustomer(customerId: string): Promise<boolean> {\n    return DeleteCustomer(customerId, this)\n  }\n\n  /**\n   * Create metadata\n   *\n   * @param {Metadata} metadata\n   * @returns {Promise<Metadata>}\n   */\n  public createMetadata(metadata: Metadata): Promise<Metadata> {\n    return CreateMetadata(metadata, this)\n  }\n\n  /**\n   * Fetch metadata\n   *\n   * @param {Metadata} metadata\n   * @returns {Promise<Metadata>}\n   */\n  public fetchMetadata(metadataId: string): Promise<Metadata> {\n    return FetchMetadata(metadataId, this)\n  }\n\n  /**\n   * Create basket\n   *\n   * @param {Basket} baskset\n   * @returns {Promise<Basket>}\n   */\n  public createBasket(basket: Basket): Promise<Basket> {\n    return CreateBasket(basket, this)\n  }\n\n  /**\n   * Fetch basket\n   *\n   * @param {Basket} baskset\n   * @returns {Promise<Basket>}\n   */\n  public fetchBasket(basketId: string): Promise<Basket> {\n    return FetchBasket(basketId, this)\n  }\n\n  /**\n   * Fetch basket\n   *\n   * @param {Basket} baskset\n   * @returns {Promise<Basket>}\n   */\n  public updateBasket(basketId: string, basket: Basket): Promise<Basket> {\n    return UpdateBasket(basketId, basket, this)\n  }\n\n  /**\n   * Authorize a payment\n   *\n   * @param {authorizeObject} args\n   * @returns {Promise<Authorization>}\n   */\n  public authorize(args: authorizeObject): Promise<Authorization> {\n    return AuthorizationService(args, this)\n  }\n\n  /**\n   * Charge a payment\n   *\n   * @param {chargeObject} args\n   * @returns {Promise<Charge>}\n   */\n  public charge(args: chargeObject): Promise<Charge> {\n    return ChargeService(args, this)\n  }\n\n  /**\n   * Charge after authorization\n   *\n   * @param {chargeAuthorizeObject} args\n   * @returns {Promise<Charge>}\n   */\n  public chargeAuthorization(args: chargeAuthorizeObject): Promise<Charge> {\n    return ChargeAuthorization(args, this)\n  }\n\n  /**\n   * Reversal a payment\n   *\n   * @param {cancelAuthorizeObject} args\n   * @returns {Promise<Cancel>}\n   */\n  public cancelAuthorization(args: cancelAuthorizeObject): Promise<Cancel> {\n    return CancelAuthorization(args, this)\n  }\n\n  /**\n   * Refund a payment\n   *\n   * @param {cancelChargeObject} args\n   * @returns {Promise<Cancel>}\n   */\n  public cancelCharge(args: cancelChargeObject): Promise<Cancel> {\n    return CancelCharge(args, this)\n  }\n\n  /**\n   * Shipment\n   *\n   * @param {string} paymentId\n   * @returns {Promise<Shipment>}\n   */\n  public shipment(paymentId: string, args: shipmentObject): Promise<Shipment> {\n    return ShipmentService(paymentId, args, this)\n  }\n\n  /**\n   * Init authorize paypage\n   * \n   * @param {Paypage} paypage\n   * @returns {Promise<Paypage>}\n   */\n  public initAuthorizePaypage(paypage: Paypage): Promise<Paypage> {\n    return InitPaypage(paypage, 'authorize', this)\n  }\n\n  /**\n   * Init charge paypage\n   *\n   * @param {Paypage} paypage\n   * @returns {Promise<Paypage>}\n   */\n  public initChargePaypage(paypage: Paypage): Promise<Paypage> {\n    return InitPaypage(paypage, 'charge', this)\n  }\n\n  /**\n   * Init authorize linkpay\n   *\n   * @param {Linkpay} linkpay\n   * @returns {Promise<Linkpay>}\n   */\n  public initAuthorizeLinkpay(linkpay: Linkpay): Promise<Linkpay> {\n    return InitLinkpay(linkpay, 'authorize', this)\n  }\n\n  /**\n   * Init charge linkpay\n   *\n   * @param {Linkpay} linkpay\n   * @returns {Promise<Linkpay>}\n   */\n  public initChargeLinkpay(linkpay: Linkpay): Promise<Linkpay> {\n    return InitLinkpay(linkpay, 'charge', this)\n  }\n\n  /**\n   * Update linkpay\n   * \n   * @param {string} linkpayIdOrAlias\n   * @param {updateLinkpayObject} linkpayObj\n   * @returns {Promise<Linkpay>}\n   */\n  public updateLinkpay(linkpayIdOrAlias: string, linkpay: Linkpay): Promise<Linkpay> {\n    return UpdateLinkpay(linkpayIdOrAlias, linkpay, this)\n  }\n\n  /**\n   * Delete linkpay\n   * \n   * @param {string} linkpayIdOrAlias\n   * @returns {Promise<boolean>}\n   */\n  public deleteLinkpay(linkpayIdOrAlias: string): Promise<boolean> {\n    return DeleteLinkpay(linkpayIdOrAlias, this)\n  }\n\n  /**\n   * Init charge paypage\n   *\n   * @param {Paypage} paypage\n   * @returns {Promise<Paypage>}\n   */\n  public payout(args: payoutObject): Promise<Payout> {\n    return PayoutService(args, this)\n  }\n\n  /**\n   * Fetch a payout object\n   *\n   * @param {string} paymentId\n   * @param {string} payoutId\n   * @returns {Promise<Payment>}\n   */\n  public fetchPayout(paymentId: string, payoutId: string): Promise<Payout> {\n    return FetchPayout(paymentId, payoutId, this)\n  }\n\n  /**\n   * Fetch installment secured plans\n   *\n   * @param {string} amount\n   * @param {string} currency\n   * @param {string} effectiveInterestRate\n   * @param {string} orderDate\n   * @returns {Promise<Payment>}\n   */\n  public fetchInstallmentSecuredPlan(amount: string, currency: string, effectiveInterestRate: string, orderDate: string): Promise<Array<InstallmentSecuredPlan>> {\n    return FetchInstallmentSecuredPlan(amount, currency, effectiveInterestRate, orderDate, this)\n  }\n\n  /**\n  * Update InstallmentSecured\n  *\n  * @param {string} installmentSecuredId\n  * @param {updateInstallmentSecuredObject} installmentSecured\n  * @returns {Promise<InstallmentSecured>}\n  */\n  public updateInstallmentSecured(installmentSecuredId: string, installmentSecured: updateInstallmentSecuredObject): Promise<InstallmentSecured> {\n    return UpdateInstallmentSecured(installmentSecuredId, installmentSecured, this) \n  }\n\n  /**\n   * Start Recurring \n   * \n   * @param {string} paymentId \n   * @param {recurringObj} args\n   */\n  public startRecurring(paymentId: string, args: recurringObject): Promise<Recurring> {\n    return CreateRecurring(paymentId, args, this)\n  }\n\n  /**\n   * Register Webhook \n   * \n   * @param {webhookObject} args\n   * @returns {Promise<Webhook>}\n   */\n\n  public registerWebhook(args: webhookObject): Promise<Webhook> {\n    return RegisterWebhook(args, this)\n  }\n\n  /**\n  * Fetch Webhook\n  *\n  * @param {string} id\n  * @returns {Promise<Webhook>}\n  */\n  public fetchWebhook(id?: string): Promise<Webhook> {\n    return FetchWebhook(this, id)\n  }\n\n  /**\n  * Update Webhook\n  *\n  * @param {string} id\n  * @returns {Promise<Webhook>}\n  */\n  public updateWebhook(id: string, args: any): Promise<Webhook> {\n    return UpdateWebhook(id, args, this)\n  }\n\n  /**\n  * Delete Webhook\n  *\n  * @param {string} id\n  * @returns {Promise<Webhook>}\n  */\n  public deleteWebhook(id?: string): Promise<any> {\n    return DeleteWebhook(this, id)\n  }\n}\n","export const ERROR_MISSING_PRIVATE_KEY = 'Missing key to init Unzer SDK'","import { SDK_VERSION } from './configs/Version'\nimport { Customer } from './payments/Customer'\nimport PaymentService from './services/PaymentService'\nimport Metadata from './payments/Metadata'\nimport Basket from './payments/Basket'\nimport PaymentType from './payments/types/PaymentType'\nimport * as ErrorMessage from './configs/ErrorMessage'\nimport Authorization, { authorizeObject, chargeAuthorizeObject } from './payments/business/Authorization'\nimport Payout, { payoutObject } from './payments/business/Payout'\nimport Charge, { chargeObject } from './payments/business/Charge'\nimport Cancel, { cancelAuthorizeObject, cancelChargeObject } from './payments/business/Cancel'\nimport Paypage from './payments/paypage/Paypage'\nimport Linkpay from './payments/paypage/Linkpay'\nimport Payment from './payments/business/Payment'\nimport AbstractPaymentType from './payments/types/AbstractPaymentType'\nimport Shipment, { shipmentObject } from './payments/business/Shipment'\nimport Recurring, { recurringObject } from './payments/business/Recurring'\nimport InstallmentSecuredPlan from './payments/types/InstallmentSecuredPlan'\nimport InstallmentSecured, { updateInstallmentSecuredObject } from './payments/types/InstallmentSecured'\nimport Webhook, { webhookObject } from './payments/business/Webhook'\n\nexport default class Unzer {\n  private paymentService: PaymentService\n  private privateKey: string\n\n  constructor(privateKey: string, locale?: string, env?: string) {\n    if (!privateKey) {\n      throw new Error(ErrorMessage.ERROR_MISSING_PRIVATE_KEY)\n    }\n\n    this.privateKey = privateKey\n    this.paymentService = new PaymentService(this, locale, env)\n  }\n\n  /**\n   * Get SDK Version\n   *\n   * @returns {string}\n   */\n  public getVersion(): string {\n      return SDK_VERSION\n  }\n\n  /**\n   * Get private key\n   *\n   * @returns {string}\n   */\n  public getPrivateKey(): string {\n    return this.privateKey\n  }\n\n  /**\n   * Create a payment\n   *\n   * @param {PaymentType} paymentType\n   * @returns {PaymentType}\n   */\n  public createPaymentType(paymentType: AbstractPaymentType): Promise<PaymentType> {\n    return this.paymentService.createPaymentType(paymentType)\n  }\n\n  /**\n   * Create new customer\n   *\n   * @param {Customer} customer\n   * @returns {Customer}\n   */\n  public createCustomer(customer: Customer): Promise<Customer> {\n    return this.paymentService.createCustomer(customer)\n  }\n\n  /**\n   * Fetch a customer\n   *\n   * @param {string} customerId\n   * @returns {Promise}\n   */\n  public fetchCustomer(customerId: string): Promise<Customer> {\n    return this.paymentService.fetchCustomer(customerId)\n  }\n\n  /**\n   * Update customer\n   *\n   * @param {string} customerId\n   * @param {Customer} customer\n   * @returns {Promise<Customer>}\n   */\n  public updateCustomer(customerId: string, customer: Customer): Promise<Customer> {\n    return this.paymentService.updateCustomer(customerId, customer)\n  }\n\n  /**\n   * Delete a customer\n   *\n   * @param {string} customerId\n   * @returns {Promise<boolean>}\n   */\n  public deleteCustomer(customerId: string): Promise<boolean> {\n    return this.paymentService.deleteCustomer(customerId)\n  }\n\n  /**\n   * Create metadata\n   * \n   * @param {Metadata} metadata \n   */\n  public createMetadata(metadata: Metadata): Promise<Metadata> {\n    return this.paymentService.createMetadata(metadata)\n  }\n\n  /**\n   * Fetch metadata information\n   * \n   * @param metadataId \n   */\n  public fetchMetadata(metadataId: string): Promise<Metadata> {\n    return this.paymentService.fetchMetadata(metadataId)\n  }\n\n  /**\n   * Create a basket\n   *\n   * @param {Basket} basket\n   * @returns {Basket}\n   */\n  public createBasket(basket: Basket): Promise<Basket> {\n    return this.paymentService.createBasket(basket)\n  }\n\n  /**\n   * Fetch a basket\n   *\n   * @param {Basket} basket\n   * @returns {Basket}\n   */\n  public fetchBasket(basketId: string): Promise<Basket> {\n    return this.paymentService.fetchBasket(basketId)\n  }\n\n  /**\n   * Update basket\n   *\n   * @param {Basket} basket\n   * @returns {Basket}\n   */\n  public updateBasket(basketId: string, basket: Basket): Promise<Basket> {\n    return this.paymentService.updateBasket(basketId, basket)\n  }\n\n  /**\n   * Fetch a payment\n   *\n   * @param {string} orderId\n   * @returns {Promise}\n   */\n  public fetchPaymentType(paymentTypeId: string): Promise<PaymentType> {\n    return this.paymentService.fetchPaymentType(paymentTypeId)\n  }\n\n  /**\n   * Fetch a payment\n   *\n   * @param {string} orderId\n   * @returns {Promise}\n   */\n  public fetchPayment(paymentId: string): Promise<Payment> {\n    return this.paymentService.fetchPayment(paymentId)\n  }\n\n  /**\n   * Fetch authorization transaction\n   *\n   * @param {string} paymentId\n   * @returns {Promise<Authorization>}\n   */\n  public fetchAuthorization(paymentId: string): Promise<Authorization> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const payment = await this.paymentService.fetchPayment(paymentId)\n        resolve(payment.getAuthorization())\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n\n  /**\n   * Fetch charge transaction\n   *\n   * @param {string} paymentId\n   * @param {string} chargeId\n   * @returns {Promise<Charge>}\n   */\n  public fetchCharge(paymentId: string, chargeId: string): Promise<Charge> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const payment = await this.paymentService.fetchPayment(paymentId)\n        resolve(payment.getCharge(chargeId))\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n\n  /**\n   * Fetch cancel transaction\n   *\n   * @param {string} paymentId\n   * @param {string} refundId\n   * @param {string} cancelId\n   * @returns {Promise<Cancel>}\n   */\n  public fetchCancel(paymentId: string, cancelId: string, refundId?: string): Promise<Cancel> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        // Fetch a payment with payment Id\n        const payment = await this.paymentService.fetchPayment(paymentId)\n        \n        if(refundId) {\n          // Get cancel from payment with cancel Id and refund Id\n          resolve(payment.getCancel(cancelId, refundId))  \n        } else {\n          // Get cancel from payment with only cancel Id\n          resolve(payment.getCancel(cancelId))  \n        }\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n\n  /**\n   * Unzer Authorize\n   *\n   * @param {authorizeObject} args\n   * @returns {Authorization}\n   */\n  public async authorize(args: authorizeObject): Promise<Authorization> {\n    let { typeId, customerId } = args\n\n    // If typeId is a instance of PaymentType (not string)\n    // we will create a payment first then authorize with paymentTypeId\n    if (typeId instanceof AbstractPaymentType) {\n      const paymentType: PaymentType = await this.createPaymentType(typeId)\n      typeId = paymentType.getId()\n    }\n\n    // If customerId is a instance of Customer (not string)\n    // we will create a payment first then authorize with paymentTypeId\n    if (customerId instanceof Customer) {\n      const customer: Customer = await this.createCustomer(customerId)\n      customerId = customer.getCustomerId()\n    }\n\n    return this.paymentService.authorize({ ...args, typeId: typeId, customerId: customerId })\n  }\n\n  /**\n   * Unzer Charge\n   *\n   * @param {chargeObject} args\n   * @returns {Promise<Charge>}\n   */\n  public async charge(args: chargeObject): Promise<Charge> {\n    let { typeId, customerId } = args\n\n    // If typeId is a instance of PaymentType (not string)\n    // we will create a payment first then authorize with paymentTypeId\n    if (typeId instanceof AbstractPaymentType) {\n      const paymentType: PaymentType = await this.createPaymentType(typeId)\n      typeId = paymentType.getId()\n    }\n\n    // If customerId is a instance of Customer (not string)\n    // we will create a payment first then authorize with paymentTypeId\n    if (customerId instanceof Customer) {\n      const customer: Customer = await this.createCustomer(customerId)\n      customerId = customer.getCustomerId()\n    }\n\n    return this.paymentService.charge({ ...args, typeId: typeId, customerId: customerId })\n  }\n\n  /**\n   * Unzer Charge after authorization\n   *\n   * @param {chargeAuthorizeObject} args\n   * @returns {Promise<Charge>}\n   */\n  public chargeAuthorization(args: chargeAuthorizeObject): Promise<Charge> {\n    return this.paymentService.chargeAuthorization(args)\n  }\n\n  /**\n   * Reversal (Cancel of authorize)\n   *\n   * @param {cancelAuthorizeObject} args\n   * @returns {Promise<Cancel>}\n   */\n  public cancelAuthorization(args: cancelAuthorizeObject): Promise<Cancel> {\n    return this.paymentService.cancelAuthorization(args)\n  }\n\n  /**\n   * Cancel charge\n   *\n   * @param {cancelChargeObject} args\n   * @returns {Promise<Cancel>}\n   */\n  public cancelCharge(args: cancelChargeObject): Promise<Cancel> {\n    return this.paymentService.cancelCharge(args)\n  }\n\n  /**\n   * Shipment \n   * \n   * @param paymentId \n   */\n  public shipment(paymentId: string, args: shipmentObject): Promise<Shipment> {\n    return this.paymentService.shipment(paymentId, args)\n  }\n\n  /**\n   * Start recurring \n   * \n   * @param {string} paymentId \n   * @param {recurringObj} args\n   */\n  public startRecurring(paymentId: string, args: recurringObject): Promise<Recurring> {\n    return this.paymentService.startRecurring(paymentId, args)\n  }\n\n  /**\n   * Init Paypage with authorize\n   *\n   * @param {Paypage} paypage\n   * @returns {Promise<Paypage>}\n   */\n  public initAuthorizePaypage(paypage: Paypage): Promise<Paypage> {\n    return this.paymentService.initAuthorizePaypage(paypage)\n  }\n\n  /**\n   * Init Paypage with charge\n   *\n   * @param {Paypage} paypage\n   * @returns {Promise<Paypage>}\n   */\n  public initChargePaypage(paypage: Paypage): Promise<Paypage> {\n    return this.paymentService.initChargePaypage(paypage)\n  }\n\n  /**\n   * Init Linkpay with authorize\n   *\n   * @param {Linkpay} linkpay\n   * @returns {Promise<Linkpay>}\n   */\n  public initAuthorizeLinkpay(linkpay: Linkpay): Promise<Linkpay> {\n    return this.paymentService.initAuthorizeLinkpay(linkpay)\n  }\n\n  /**\n   * Init Linkpay with charge\n   *\n   * @param {Linkpay} linkpay\n   * @returns {Promise<Linkpay>}\n   */\n  public initChargeLinkpay(linkpay: Linkpay): Promise<Linkpay> {\n    return this.paymentService.initChargeLinkpay(linkpay)\n  }\n\n  /**\n   * Update Linkpay\n   *\n   * @param {string} linkpayIdOrAlias\n   * @param {Linkpay} linkpay\n   * @returns {Promise<Linkpay>}\n   */\n  public updateLinkpay(linkpayIdOrAlias: string, linkpay: Linkpay): Promise<Linkpay> {\n    return this.paymentService.updateLinkpay(linkpayIdOrAlias, linkpay)\n  }\n\n  /**\n   * Delete Linkpay\n   *\n   * @param {string} linkpayIdOrAlias\n   * @returns {Promise<boolean>}\n   */\n  public deleteLinkpay(linkpayIdOrAlias: string): Promise<boolean> {\n    return this.paymentService.deleteLinkpay(linkpayIdOrAlias)\n  }\n\n  /**\n   * Unzer Payout\n   *\n   * @param {payoutObject} args\n   * @returns {Payout}\n   */\n  public payout(args: payoutObject): Promise<Payout> {\n    return this.paymentService.payout(args)\n  }\n\n  /**\n   * Fetch payout transaction\n   *\n   * @param {string} paymentId\n   * @param {string} payoutId\n   * @returns {Promise<Payout>}\n   */\n  public fetchPayout(paymentId: string, payoutId: string): Promise<Payout> {\n    return this.paymentService.fetchPayout(paymentId, payoutId)\n  }\n\n  /**\n   * Fetch installment secured plan\n   *\n   * @param {string} amount\n   * @param {string} currency\n   * @param {string} effectiveInterestRate\n   * @param {string} orderDate\n   * @returns {Promise<Array<InstallmentSecuredPlan>}\n   */\n  public fetchInstallmentSecuredPlan(amount: string, currency: string, effectiveInterestRate: string, orderDate: string): Promise<Array<InstallmentSecuredPlan>> {\n    return this.paymentService.fetchInstallmentSecuredPlan(amount, currency, effectiveInterestRate, orderDate)\n  }\n\n  /**\n   * Update installment secured plan\n   *\n   * @param {string} installmentSecuredId\n   * @param {updateInstallmentSecuredObject} installmentSecured\n   * @returns {Promise<InstallmentSecured>}\n   */\n  public updateInstallmentSecured(installmentSecuredId: string, installmentSecured: updateInstallmentSecuredObject): Promise<InstallmentSecured> {\n    return this.paymentService.updateInstallmentSecured(installmentSecuredId, installmentSecured)\n  }\n\n  /**\n  * Register Webhook\n  *\n  * @param {webhookObject} args\n  * @returns {Promise<Webhook>}\n  */\n public registerWebhook(args: webhookObject): Promise<Webhook> {\n   return this.paymentService.registerWebhook(args)\n }\n\n  /**\n  * Fetch Webhook\n  *\n  * @param {string} id\n  * @returns {Promise<Webhook>}\n  */\n  public fetchWebhook(id?: string): Promise<Webhook> {\n    return this.paymentService.fetchWebhook(id)\n  }\n\n  /**\n  * Update Webhook\n  *\n  * @param {any} args\n  * @param {string} id\n  * @returns {Promise<Webhook>}\n  */\n  public updateWebhook(id: string, args: any): Promise<Webhook> {\n    return this.paymentService.updateWebhook(id, args)\n  }\n\n  /**\n  * Delete Webhook\n  *\n  * @param {string} id\n  * @returns {Promise<Webhook>}\n  */\n  public deleteWebhook(id?: string): Promise<any> {\n    return this.paymentService.deleteWebhook(id)\n  }\n}\n","import Unzer from '../../Unzer'\nimport AbstractPaymentType from '../types/AbstractPaymentType'\nimport PaymentType from '../types/PaymentType'\nimport Resources from '../business/Resources'\n\nexport default class Paypage extends AbstractPaymentType implements PaymentType {\n  private amount: string | number\n  private currency: string\n  private returnUrl: string\n  private logoImage: string\n  private fullPageImage: string\n  private shopName: string\n  private shopDescription: string\n  private tagline: string\n  private card3ds: boolean\n  private invoiceId: string\n  private additionalAttributes: any\n  private termsAndConditionUrl: string\n  private privacyPolicyUrl: string\n  private impressumUrl: string\n  private helpUrl: string\n  private contactUrl: string\n  private resources: Resources\n  private typeUrl: string\n  private redirectUrl: string\n  private action: string\n  private excludeTypes: Array<string>\n\n  constructor() {\n    super()\n    this.additionalAttributes = {}\n    this.resources = new Resources()\n  }\n\n  /**\n   * Get url end point\n   *\n   * @returns {string}\n   */\n  public getTypeUrl(): string {\n    return this.typeUrl\n  }\n\n  /**\n   * Get Payload\n   *\n   * @returns\n   */\n  public getPayload() {\n    const payload: any = {\n      amount: this.getAmount(),\n      currency: this.getCurrency(),\n      returnUrl: this.getReturnUrl(),\n      logoImage: this.getLogoImage(),\n      fullPageImage: this.getFullPageImage(),\n      shopName: this.getShopName(),\n      shopDescription: this.getShopDescription(),\n      tagline: this.getTagline(),\n      card3ds: this.getCard3ds(),\n      invoiceId: this.getInvoiceId(),\n      termsAndConditionUrl: this.getTermsAndConditionUrl(),\n      privacyPolicyUrl: this.getPrivacyPolicyUrl(),\n      impressumUrl: this.getImpressumUrl(),\n      helpUrl: this.getHelpUrl(),\n      contactUrl: this.getContactUrl(),\n      resources: this.getResources(),\n      excludeTypes: this.getExcludeTypes()\n    }\n\n    return payload\n  }\n\n  /**\n   * Get Amount\n   *\n   * @param {string} amount\n   * @returns {string}\n   */\n  public getAmount(): string|number {\n    return this.amount\n  }\n\n  /**\n   * Set amount\n   *\n   * @param {string} amount\n   * @returns {Card}\n   */\n  public setAmount(amount: string|number): Paypage {\n    this.amount = amount\n    return this\n  }\n\n  /**\n   * Get currency\n   *\n   * @returns {string}\n   */\n  public getCurrency(): string {\n    return this.currency\n  }\n\n  /**\n   * Set currency\n   *\n   * @param {string} currency\n   * @returns {Paypage}\n   */\n  public setCurrency(currency: string): Paypage {\n    this.currency = currency\n    return this\n  }\n\n  /**\n   * Get return URL\n   *\n   * @returns {string}\n   */\n  public getReturnUrl(): string {\n    return this.returnUrl\n  }\n\n  /**\n   * Set return URL\n   *\n   * @param {string} returnUrl\n   * @returns {Paypage}\n   */\n  public setReturnUrl(returnUrl: string): Paypage {\n    this.returnUrl = returnUrl\n    return this\n  }\n\n  /**\n   * Get logo image\n   *\n   * @returns {string}\n   */\n  public getLogoImage(): string {\n    return this.logoImage\n  }\n\n  /**\n   * Set logo image\n   *\n   * @param {string} logoImage\n   * @returns {Paypage}\n   */\n  public setLogoImage(logoImage: string): Paypage {\n    this.logoImage = logoImage\n    return this\n  }\n\n  /**\n   * Get fullpage image\n   *\n   * @returns {string}\n   */\n  public getFullPageImage(): string {\n    return this.fullPageImage\n  }\n\n  /**\n   * Set fullpage image\n   *\n   * @param {string} fullPageImage\n   * @returns {Paypage}\n   */\n  public setFullPageImage(fullPageImage: string): Paypage {\n    this.fullPageImage = fullPageImage\n    return this\n  }\n\n  /**\n   * Get shop name\n   *\n   * @returns {string}\n   */\n  public getShopName(): string {\n    return this.shopName\n  }\n\n  /**\n   * Set shop name\n   *\n   * @param {string} shopName\n   * @returns {Paypage}\n   */\n  public setShopName(shopName: string): Paypage {\n    this.shopName = shopName\n    return this\n  }\n\n  /**\n   * Get shop description\n   *\n   * @returns {string}\n   */\n  public getShopDescription(): string {\n    return this.shopDescription\n  }\n\n  /**\n   * Set shop description\n   *\n   * @param {string} shopDescription\n   * @returns {Paypage}\n   */\n  public setShopDescription(shopDescription: string): Paypage {\n    this.shopDescription = shopDescription\n    return this\n  }\n\n  /**\n   * Get tagline\n   *\n   * @returns {string}\n   */\n  public getTagline(): string {\n    return this.tagline\n  }\n\n  /**\n   * Set tagline\n   *\n   * @param {string} tagline\n   * @returns {Paypage}\n   */\n  public setTagline(tagline: string): Paypage {\n    this.tagline = tagline\n    return this\n  }\n\n  /**\n   * Get card3ds\n   *\n   * @returns {string}\n   */\n  public getCard3ds(): boolean {\n    return this.card3ds\n  }\n\n  /**\n   * Set card3ds\n   *\n   * @param {string} card3ds\n   * @returns {Paypage}\n   */\n  public setCard3ds(card3ds: boolean): Paypage {\n    this.card3ds = card3ds\n    return this\n  }\n\n  /**\n   * Get Invoice Id\n   *\n   * @returns {string}\n   */\n  public getInvoiceId(): string {\n    return this.invoiceId\n  }\n\n  /**\n   * Set Additional attributes\n   *\n   * @param {object} additionalAttributes\n   * @returns {Paypage}\n   */\n  public setAdditionalAttributes(additionalAttributes: object): Paypage {\n    this.additionalAttributes = additionalAttributes\n    return this\n  }\n\n  /**\n   * Get Additional attributes\n   *\n   * @returns {object}\n   */\n  public getAdditionalAttributes(): object {\n    return this.additionalAttributes\n  }\n\n  /**\n   * Set Invoice Id\n   *\n   * @param {string} invoiceId\n   * @returns {Paypage}\n   */\n  public setInvoiceId(invoiceId: string): Paypage {\n    this.invoiceId = invoiceId\n    return this\n  }\n\n  /**\n   * Get terms and condition URL\n   *\n   * @returns {string}\n   */\n  public getTermsAndConditionUrl(): string {\n    return this.termsAndConditionUrl\n  }\n\n  /**\n   * Set terms and condition URL\n   *\n   * @param {string} termsAndConditionUrl\n   * @returns {Paypage}\n   */\n  public setTermsAndConditionUrl(termsAndConditionUrl: string): Paypage {\n    this.termsAndConditionUrl = termsAndConditionUrl\n    return this\n  }\n\n  /**\n   * Get privacy URL\n   *\n   * @returns {string}\n   */\n  public getPrivacyPolicyUrl(): string {\n    return this.privacyPolicyUrl\n  }\n\n  /**\n   * Set privacy URL\n   *\n   * @param {string} privacyPolicyUrl\n   * @returns {Paypage}\n   */\n  public setPrivacyPolicyUrl(privacyPolicyUrl: string): Paypage {\n    this.privacyPolicyUrl = privacyPolicyUrl\n    return this\n  }\n\n  /**\n   * Get Impressum URL\n   *\n   * @returns {string}\n   */\n  public getImpressumUrl(): string {\n    return this.impressumUrl\n  }\n\n  /**\n   * Set Impresssum URL\n   *\n   * @param {string} impressumUrl\n   * @returns {Paypage}\n   */\n  public setImpressumUrl(impressumUrl: string): Paypage {\n    this.impressumUrl = impressumUrl\n    return this\n  }\n\n  /**\n   * Get Help URL\n   *\n   * @returns {string}\n   */\n  public getHelpUrl(): string {\n    return this.helpUrl\n  }\n\n  /**\n   * Set Help URL\n   *\n   * @param {string} helpUrl\n   * @returns {Paypage}\n   */\n  public setHelpUrl(helpUrl: string): Paypage {\n    this.helpUrl = helpUrl\n    return this\n  }\n\n  /**\n   * Set contact URL\n   *\n   * @returns {string}\n   */\n  public getContactUrl(): string {\n    return this.contactUrl\n  }\n\n  /**\n   * Set contact URL\n   *\n   * @param {string} contactUrl\n   * @returns {Paypage}\n   */\n  public setContactUrl(contactUrl: string): Paypage {\n    this.contactUrl = contactUrl\n    return this\n  }\n\n  /**\n   * Get redirectUrl \n   *\n   * @returns {string}\n   */\n  public getRedirectUrl(): string {\n    return this.redirectUrl\n  }\n\n\n  /**\n   * Set redirectUrl\n   *\n   * @param {string} redirectUrl\n   * @returns {Paypage}\n   */\n  public setRedirectUrl(redirectUrl: string): Paypage {\n    this.redirectUrl = redirectUrl\n    return this\n  }\n\n  /**\n   * Get action \n   *\n   * @returns {string}\n   */\n  public getAction(): string {\n    return this.action\n  }\n\n  /**\n   * Set redirectUrl\n   *\n   * @param {string} redirectUrl\n   * @returns {Paypage}\n   */\n  public setAction(action: string): Paypage {\n      this.action = action\n      return this\n  }\n\n  /**\n   * Get resources\n   *\n   * @returns {Resources}\n   */\n  public getResources(): Resources {\n    return this.resources\n  }\n\n  /**\n   * Set excludeTypes\n   *\n   * @param {Array<string>} excludeTypes\n   * @returns {Paypage}\n   */\n  public setExcludeTypes(excludeTypes: Array<string>): Paypage {\n    this.excludeTypes = excludeTypes\n    return this\n  }\n\n  /**\n   * Get excludeTypes\n   *\n   * @returns {Array<string>}\n   */\n  public getExcludeTypes(): Array<string> {\n    return this.excludeTypes\n  }\n\n  /**\n   * Set resources\n   *\n   * @param {*} resources\n   */\n  public setResources(resources: any) {\n    this.resources\n      .setCustomerId(resources.customerId)\n      .setMetadataId(resources.metadataId)\n      .setPaymentId(resources.paymentId)\n      .setBasketId(resources.basketId)\n  }\n}"],"names":["apiURL.URL_TYPE_CARD","apiURL.URL_TYPE_EPS","apiURL.URL_TYPE_GIROPAY","apiURL.URL_TYPE_PAYPAL","apiURL.URL_TYPE_IDEAL","apiURL.URL_TYPE_INVOICE","apiURL.URL_TYPE_PREPAYMENT","apiURL.URL_TYPE_PRZELEWY24","apiURL.URL_TYPE_SEPA_DIRECT_DEBIT","apiURL.URL_TYPE_SEPA_DIRECT_DEBIT_SECURED","apiURL.URL_TYPE_SOFORT","apiURL.URL_TYPE_PIS","apiURL.URL_TYPE_ALIPAY","apiURL.URL_TYPE_WECHATPAY","apiURL.URL_TYPE_BANCONTACT","apiURL.URL_TYPE_INSTALLMENT_SECURED","apiURL.URL_TYPE_INVOICE_SECURED","EPS","PIS","apiURL.URL_PAYMENT","Utils.getPaymentTypeFromTypeId","Utils.mapResponsePaymentType","apiURL.URL_CUSTOMER","apiURL.URL_METADATA","apiURL.URL_BASKET","Utils.replaceUrl","apiURL.URL_RECURRING","apiURL.URL_PAYMENT_AUTHORIZE","apiURL.URL_PAYMENT_CHARGE","apiURL.URL_PAYMENT_CHARGE_AUTHORIZE","apiURL.URL_PAYMENT_AUTHORIZE_CANCEL","apiURL.URL_PAYMENT_CHARGE_CANCEL","apiURL.URL_PAYMENT_SHIPMENT","apiURL.URL_PAYPAGE_AUTHORIZE","apiURL.URL_PAYPAGE_CHARGE","apiURL.URL_LINKPAY_AUTHORIZE","apiURL.URL_LINKPAY_CHARGE","apiURL.URL_LINKPAY","apiURL.URL_PAYMENT_PAYOUT","apiURL.URL_TYPE_INSTALLMENT_SECURED_PLANS","apiURL.URL_WEBHOOK","ErrorMessage.ERROR_MISSING_PRIVATE_KEY"],"mappings":"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"}